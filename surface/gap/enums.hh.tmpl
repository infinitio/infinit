#ifndef SURFACE_GAP_ENUMS_HH
# define SURFACE_GAP_ENUMS_HH

// This are a shared enums between C++ and C.
# ifdef __cplusplus
extern "C"
{
# endif
  typedef enum
  {
    // The transaction was just created.
    gap_transaction_new,
    // Sender or recipient waiting until acceptance.
    gap_transaction_waiting_accept,
    // Recipient exhausted the cloud buffered data.
    gap_transaction_waiting_data,
    // Connecting.
    gap_transaction_connecting,
    // Actively transfering.
    gap_transaction_transferring,
    // Uploaded in the cloud, not yet dowloaded.
    gap_transaction_cloud_buffered,
    // Finished.
    gap_transaction_finished,
    // Failed.
    gap_transaction_failed,
    // Cancelled.
    gap_transaction_canceled,
    // Rejected.
    gap_transaction_rejected,
  } gap_TransactionStatus;

  typedef enum
  {
    gap_user_status_offline = 0,
    gap_user_status_online = 1,
    gap_user_status_busy = 2,
  } gap_UserStatus;

  typedef enum
  {
    NotificationType_NewTransaction,
    NotificationType_TransactionUpdate,
    NotificationType_UserStatusUpdate,
    NotificationType_NewSwagger,
    NotificationType_ConnectionStatus,
    NotificationType_KickedOut,
    NotificationType_AvatarAvailable,
    NotificationType_TrophoniusUnavailable,
  } NotificationType;

  typedef enum
  {
    gap_ok = 1,
    gap_error = 0,
    gap_network_error = -2,
    gap_internal_error = -3,
    gap_no_device_error = -4,
    gap_wrong_passport = -5,
    gap_no_file = -6,
    gap_file_not_found = -7,
    gap_api_error = -10,
    gap_peer_to_peer_error = -11,
    gap_data_not_fetched_yet = -12,
    gap_meta_unreachable = -13,
    gap_meta_down_with_message = -14,
    gap_trophonius_unreachable = -15,
    <%! from infinit.oracles.meta.error import errors %>
    %for name, (code, comment) in sorted(errors.items()):
      gap_${name} = ${code},
    %endfor
  } gap_Status;

# ifdef __cplusplus
}
# endif

#endif
