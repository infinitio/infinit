#!/usr/bin/env python3

import os
import sys
root = os.path.dirname(__file__)
drake = os.path.abspath(os.path.join(root, '../../elle/drake/src'))
sys.path.insert(0, drake)

import resource
resource.setrlimit(resource.RLIMIT_NOFILE, (500, -1))

import drake
import drake.cxx
import drake.cxx.boost

with drake.Drake('../..') as d:
  cxx_compiler = os.getenv('CXX', 'clang++')
  cxx_toolkit = drake.cxx.GccToolkit(compiler = cxx_compiler)
  os.environ['MACOSX_DEPLOYMENT_TARGET'] = '10.7' # ensure that build is compatible with 10.7

  cxx_config = drake.cxx.Config()

  cxx_config.enable_debug_symbols()
  cxx_config.enable_optimization(False)
  cxx_config.flag('-ftemplate-depth=512')
  cxx_config.flag('-std=c++11')
  cxx_config.flag('-stdlib=libc++')
  cxx_config.warnings.overloaded_virtual = False

  boost = drake.cxx.boost.Boost(prefix = '/usr/local')
  python3 = '/usr/local/Frameworks/Python.framework/Versions/3.3'
  d.run(cxx_toolkit,
        cxx_config,
        boost = boost,
        python3 = python3,
        build_type = os.environ.get('BUILD_TYPE', 'Development'),
        enable_horizon = False)
