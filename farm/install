#!/usr/bin/env python3

import sys
import os
import subprocess
import shutil

def cmd(*args, **kwargs):
    return subprocess.check_output(list(args), **kwargs)

def error(*args):
    sys.stderr.write(' '.join(str(a) for a in args))

def fatal(*args):
    error(*args)
    sys.exit(1)

DIR_SOURCE = os.path.abspath(os.environ["DIR_SOURCE"])
DIR_BUILD = os.path.abspath(os.environ["DIR_BUILD"])
DIR_INSTALL = os.path.abspath(os.environ["DIR_INSTALL"])

for d in [DIR_SOURCE, DIR_BUILD]:
    if not os.path.isdir(d):
        fatal(d, "is not a directory")

name = cmd("git", "describe", cwd=DIR_SOURCE).decode("utf-8").strip()
rev = cmd("git", "rev-parse", "--short", "HEAD", cwd=DIR_SOURCE).decode("utf-8").strip()

version = name.split("-")[0]
major = version.split(".")[0]
minor = version.split(".")[1]

DIR_INSTALL_CLIENT = "%s/client" % DIR_INSTALL

shutil.rmtree(DIR_INSTALL_CLIENT, True)
os.makedirs(DIR_INSTALL_CLIENT)

DIR_INSTALL_SERVER = os.path.join(DIR_INSTALL, "server")
shutil.rmtree(DIR_INSTALL_SERVER, True)
os.makedirs(DIR_INSTALL_SERVER)

with open(os.path.join(DIR_INSTALL, "VERSION"), "w+") as version_file:
    version_file.write("{}\n".format(version))

for d in ['bin', 'lib', 'oracle/meta/']:
    src = os.path.join(DIR_BUILD, d)
    dst = os.path.join(DIR_INSTALL_SERVER, d)
    print("install", src, "->", dst)
    shutil.copytree(src, dst)
