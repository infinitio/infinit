#!/usr/bin/env python3

import datetime
from time import sleep

from utils import *
from bson.objectid import ObjectId
import infinit.oracles.meta.server.transaction_status as transaction_status

with Meta() as meta:
  alice = User(meta, 'alice@infinit.io')
  alice.login()
  pw = 'coinpanboumpaf'
  throws(lambda: alice.getalink(password = pw), 402)
  meta.meta.change_plan(bson.ObjectId(alice.id), 'premium')
  link_p = alice.getalink(password = pw)
  throws(lambda: meta.get('links/%s' % link_p['hash']), 401)
  throws(lambda: meta.get('links/%s?password=x' % link_p['hash']), 401)
  assertEq(
    link_p['id'],
    meta.get('links/%s?password=%s' % (link_p['hash'], pw))['id'])
  # Check one can read his own links without password
  assertEq(link_p['id'], alice.get('links/%s' % link_p['hash'])['id'])
  # Ensure has_password field is set correctly.
  link_np = alice.getalink()
  res = alice.get('links')
  for link in res['links']:
    assertEq(link['has_password'], link['id'] == link_p['id'])
  res = alice.get('links/%s' % link_p['hash'])
  assertEq(res['has_password'], True)
  res = alice.get('links/%s' % link_np['hash'])
  assertEq(res['has_password'], False)
