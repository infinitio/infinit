#!/usr/bin/env python3

import os

from utils import Meta, Trophonius, User, NoOpMailer
from infinit.oracles.meta.server.mail import Mailer
from infinit.oracles.meta.server import transaction_status

class UMailer(NoOpMailer):

  def __init__(self):
    super().__init__(True)
    self.__summaries = 0

  def template_message(self, template_name, message):
    if template_name == 'daily-summary':
      self.__summaries += 1
    NoOpMailer.template_message(self, template_name, message)

  @property
  def summaries(self):
    return self.__summaries

  @property
  def summaries(self):
    return self.__summaries

  @summaries.setter
  def summaries(self, i):
    self.__summaries += i

class RaisingMailer(UMailer):

  def __init__(self):
    super().__init__()

  def template_message(self, template_name, message):
    if self.summaries == 0:
      self.summaries += 1
      raise BaseException("impossible to send")
    UMailer.template_message(self,  template_name, message)

import datetime
hour = datetime.datetime.utcnow().hour

with Meta(force_admin = True,
          daily_summary_hour = hour) as meta, Trophonius(meta) as trophonius:
  bob = User(meta)
  alice = User(meta)
  eve = User(meta)
  serge = User(meta)

  bob.login()
  alice.login()
  eve.login()

  trophonius.connect_user(bob)
  trophonius.connect_user(alice)
  trophonius.connect_user(eve)

  bob.sendfile(alice.email, initialize = True)
  bob.sendfile(alice.email, initialize = True)
  bob.sendfile(alice.email, initialize = True)
  alice.sendfile(eve.email, initialize = True)
  bob.sendfile(eve.email, initialize = True)
  bob.sendfile(serge.email, initialize = True)

  meta.mailer = UMailer()

  res = meta.post('cron')
  assert(res['success'])
  # Alice and eve received it because they were online.
  # Serge will not because he didn't connect.
  assert meta.mailer.sent == 1
  assert meta.mailer.sent == meta.mailer.summaries

  res = meta.post('cron')
  assert(res['success'])
  # New call to cron should has no effect.
  assert meta.mailer.sent == 1
  assert meta.mailer.sent == meta.mailer.summaries

#  # Alice connect.
#  meta.mailer = UMailer()
#  alice.logout()
#  alice.login()
#
#  res = meta.post('cron/daily-summary')
#  assert(res['success'])
#  assert meta.mailer.sent == 1
#  assert meta.mailer.sent == meta.mailer.summaries
