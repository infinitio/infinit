#!/usr/bin/env python3

import os

from utils import Meta, User
from infinit.oracles.meta.server.mail import Mailer
from infinit.oracles.meta.server import transaction_status

class MailService(Mailer):

  def __init__(self, recipient):
    self.recipient = recipient

  def templated_send(self,
                     **kw):
    self.recipient.reset_password_hash = kw['reset_password_hash']

  def send(self, **kw):
    pass

with Meta() as meta:
  email = 'bob@infinit.io'
  fullname = 'bob'

  bob = User(meta, email = email, fullname = fullname)
  alice = User(meta, email = 'alice@infinit.io', fullname = 'alice')

  bob.login()
  assert alice.avatar == bob.avatar
  with open('%s/avatar.jpg' % os.path.dirname(__file__), 'rb') as f:
    bob.post('user/avatar', body = f.read())
  old_identity = bob.identity

  id = bob.sendfile(alice.id)[1]['created_transaction_id']
  bob.post("transaction/update", {"transaction_id": str(id), "status": transaction_status.INITIALIZED})

  trs = bob.get('transactions')['transactions']
  assert len(trs) == 1
  bob.logout()

  meta.mailer = MailService(bob)
  meta.post('lost-password', {"email": email})

  res = meta.get('reset-accounts/%s' % bob.reset_password_hash)
  assert res['success']

  bob.password = "new_password"
  res = meta.post('reset-accounts/%s' % bob.reset_password_hash, {"password": bob.password})
  assert res['success']

  bob.login()

  # Check that avatar is preserved on password reset.
  assert alice.avatar != bob.avatar

  assert len(bob.get('transactions')['transactions']) == 0

  new_identity = bob.identity
  assert new_identity != old_identity

  bob.logout()

  assert hasattr(bob, 'reset_password_hash')
  res = meta.post('reset-accounts/%s' % bob.reset_password_hash, {"password": bob.password})
  assert not res['success']
