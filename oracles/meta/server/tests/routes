#!/usr/bin/env python3

from utils import Meta, HTTPException, assertEq

def throws(f, status):
  assert isinstance(status, int)
  try:
    f()
    assert status == 200
  except HTTPException as e:
    if status != 200:
      assert isinstance(e.status, int)
      assertEq(e.status, status)

with Meta() as meta:
  # User
  throws(lambda: meta.post('login', {}), 400)
  throws(lambda: meta.post('web-login', {}), 400)
  throws(lambda: meta.get('logout'), 200)
  throws(lambda: meta.post('user/register', {}), 400)
  throws(lambda: meta.post('user/5241b9d226b9f10fff8be391/connected'), 200)
  throws(lambda: meta.get('users', ''), 200)
  throws(lambda: meta.post('user/change_password', {}), 400)
  throws(lambda: meta.get('user/email@email.com/view'), 200)
  throws(lambda: meta.get('user/5241b9d226b9f10fff8be391/view'), 200)
  throws(lambda: meta.get('user/from_handle/bob/view'), 200)
  throws(lambda: meta.get('user/swaggers'), 403)
  throws(lambda: meta.get('user/full_swaggers'), 403)
  throws(lambda: meta.post('user/add_swagger', {}), 400)
  throws(lambda: meta.post('user/remove_swagger', {"_id": "user_id"}), 400)
  throws(lambda: meta.post('user/favorite', {"user_id": "user_id"}), 400)
  throws(lambda: meta.post('user/unfavorite', {"user_id": "user_id"}), 400)
  throws(lambda: meta.post('user/edit', {"fullname": "fullname",
                                         "handle": "handle"}), 403)
  throws(lambda: meta.post('user/invite', {"email": "email"}), 403)
  throws(lambda: meta.post('user/admin_invite', {}), 404)
  throws(lambda: meta.get('user/invited'), 200)
  throws(lambda: meta.get('user/self'), 403)
  throws(lambda: meta.get('user/remaining_invitations'), 200)
  throws(lambda: meta.get('user/5241b9d226b9f10fff8be391/avatar'), 200)
  throws(lambda: meta.post('user/avatar', {}), 403)
  throws(lambda: meta.post('debug', {}), 400)
  # Transaction
  throws(lambda: meta.post('transaction/create', {}), 400)
  throws(lambda: meta.get('transactions'), 200)
  throws(lambda: meta.post('transaction/update'), 400)
  throws(lambda: meta.get('transaction/search', {}), 400)
  throws(lambda: meta.post('transaction/connect_device'), 400)
  throws(lambda: meta.post('transaction/5241b9d226b9f10fff8be391/endpoints'), 400)
  # Device
  throws(lambda: meta.get('devices'), 403)
  throws(lambda: meta.get('device/861e6a7b-4d51-45d7-a5b7-f192ea6d9728/view'), 403)
  throws(lambda: meta.post('device/create', {}), 403)
  throws(lambda: meta.get('device/5241b9d226b9f10fff8be391/861e6a7b-4d51-45d7-a5b7-f192ea6d9728/connected'), 200)
  throws(lambda: meta.post('device/update', {}), 400)
  throws(lambda: meta.post('device/delete', {}), 400)
