#!/usr/bin/env python3

from utils import Meta, User
from uuid import uuid4
from random import random


class Apertus:
  def __init__(self, meta):
    self.port = 1000 + int(random() * 64535)
    self.meta = meta
    self.uuid = uuid4()

  def read(self):
    res = self.socket.recvfrom(65565)
    print(res)

  def __enter__(self):
    self.meta.put('apertus/%s' % str(self.uuid), body = {"port": self.port})
    return self

  def __exit__(self, type, value, traceback):
    self.meta.delete('apertus/%s' % str(self.uuid))

with Meta() as meta:
  alice = User(meta, "alice@infinit.io")
  bob = User(meta, "bob@infinit.io")

  alice.login()
  bob.login()

  tr, res = alice.sendfile(bob.id)
  transaction_id = res['created_transaction_id']
  assert res['success']

  res = alice.get('apertus/fallback/%s' % transaction_id)
  assert not res['success']

  with Apertus(meta) as apertus, Apertus(meta) as apertus2:
    alicefb = alice.get('apertus/fallback/%s' % transaction_id)
    assert alicefb['success']

    bobfb = bob.get('apertus/fallback/%s' % transaction_id)
    assert bobfb['success']

    assert alicefb['fallback'] == bobfb['fallback']

  bob.logout()
  alice.logout()
