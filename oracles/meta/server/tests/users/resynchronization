#!/usr/bin/env python3

from utils import HTTPException, Meta, User
from bson import ObjectId
from functools import reduce
import sys
from infinit.oracles.meta.server import transaction_status

with Meta() as meta:
  alice = User(meta, "alice@infinit.io")
  bob = User(meta, "bob@infinit.io")
  charles = User(meta, "charles@infinit.io")

  bob.login()

  transaction_ids = {alice.id: [], charles.id: []}
  for _ in range(10):
    transaction_ids[alice.id].append(bob.sendfile(recipient_id = alice.id)[1]['created_transaction_id'])
  for _ in range(10):
    transaction_ids[charles.id].append(bob.sendfile(recipient_id = charles.id)[1]['created_transaction_id'])

  trs = transaction_ids[alice.id] + transaction_ids[charles.id]

  for tr in trs:
    bob.post("transaction/update", {"transaction_id": tr, "status": transaction_status.INITIALIZED})

  res = bob.get('user/synchronize?init=0')

  assert len(res['running_transactions']) == 20
  assert len(res['final_transactions']) == 0
  res = bob.get('user/synchronize?init=0')
  assert len(res['running_transactions']) == 20
  assert len(res['final_transactions']) == 0
  res = bob.get('user/synchronize?init=1')
  assert len(res['running_transactions']) == 20
  assert len(res['final_transactions']) == 0

  for tr in trs:
    bob.post("transaction/update", {"transaction_id": tr, "status": transaction_status.CANCELED})

  res = bob.get('user/synchronize?init=0')
  assert len(res['running_transactions']) == 0
  assert len(res['final_transactions']) == 20
