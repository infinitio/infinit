#!/usr/bin/env python3

from utils import Meta, User, HTTPException

with Meta(enable_emails = True) as meta:
  email = 'foobar@infinit.io'
  fullname = 'jean louis'

  u = User(meta,
           email = email,
           fullname = fullname)
  assert meta.invitation.subscribed(email)
  assert meta.database.users.count() == 1
  user = meta.database.users.find_one()
  assert user['email'] == email
  assert user['fullname'] == fullname
  assert 'source' not in user.keys()
  assert 'creation_time' in user

# Check that register source is saved.
with Meta() as meta:
  email = 'jeantest@infinit.io'
  fullname = 'Jean Test'

  u = User(meta,
           email = email,
           fullname = fullname,
           source = 'test')
  assert meta.invitation.subscribed(email)
  assert meta.database.users.count() == 1
  user = meta.database.users.find_one()
  assert user['email'] == email
  assert user['fullname'] == fullname
  assert user['source'] == 'test'
  assert 'creation_time' in user

# Check that null passwords are rejected.
with Meta() as meta:
  email = 'jeantest@infinit.io'
  fullname = 'Jean Test'
  try:
    meta.post('register', {
      'email': email,
      'fullname': fullname,
      'password': None}
    )
    assert False
  except HTTPException as e:
    pass

# Check that password is needed.
with Meta() as meta:
  email = 'jeantest@infinit.io'
  fullname = 'Jean Test'
  try:
    meta.post('register', {
      'email': email,
      'fullname': fullname
    })
    assert False
  except HTTPException as e:
    pass
