#!/usr/bin/env python3

import papier

from bson.objectid import ObjectId
from utils import Meta, Trophonius, User, HTTPException

with Meta(force_admin = True) as meta, Trophonius(meta) as trophonius:

  password = '0' * 64
  password_hash = '9' * 64
  u1 = User(meta,
            'jeanlouis@infinit.io',
            password = password)
  u1.login(password = password)
  u1.logout()

  u1.login(password = password,
           password_hash= password_hash)
  u1.logout()

  u1.login(password = password)
  u1.logout()

  try:
    u1.login(password = '3' * 64)
    assert False
  except HTTPException:
    pass

  try:
    u1.login(password = '3' * 64,
             password_hash = '8' * 64)
    assert False
  except HTTPException:
    pass

  # This should work because it will replace the old password.
  u1.login(password = '0' * 64,
           password_hash = '8' * 64)
  u1.logout()
  try:
    u1.login(
      password = '5' * 64,
      password_hash = password_hash)
    assert False
  except HTTPException:
    pass

  # This will work because the password_hash is checked first.
  u1.login(password = '4' * 64, # wrong password.
           password_hash = '8' * 64)

  password = '3' * 64
  password_hash = '6' * 64
  u2 = User(meta,
            'courge@infinit.io',
            password = password,
            password_hash = password_hash)

  u2.login(password = password)
