#!/usr/bin/env python3
from time import time
from utils import *
from uuid import uuid4

with Meta() as meta:
  user = User(meta, 'foo@bar.baz')
  user.login()
  assert not user.data['connected']

with Meta() as meta:
  user = User(meta, 'bob@infinit.io')
  # Login without a language.
  user.login()
  db_user = meta.inner.database.users.find_one({'_id': bson.ObjectId(user.id)})
  assertEq(db_user.get('language'), None)
  assertEq(user.get('user/self').get('language'), None)
  user.logout()
  # Login with a language.
  language = 'fr'
  user.login(device_language = language)
  db_user = meta.inner.database.users.find_one({'_id': bson.ObjectId(user.id)})
  assertEq(db_user.get('language'), language)
  assertEq(user.get('user/self')['language'], language)
  user.logout()
  # Login with a different language. Ensure language is replaced.
  language = 'en'
  user.login(device_language = language)
  db_user = meta.inner.database.users.find_one({'_id': bson.ObjectId(user.id)})
  assertEq(db_user.get('language'), language)
  assertEq(user.get('user/self')['language'], language)

with Meta() as meta:
  email = 'foo@bar.baz'
  user = User(meta, email)
  token = meta.meta.login_token(email)
  throws(lambda: user.get('user/self'), 403)
  user.post('web-login?email=%s&login_token=%s' % (email, token))
  user.get('user/self')
