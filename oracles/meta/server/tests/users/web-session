#!/usr/bin/env python3

from utils import Meta, Client, HTTPException
from uuid import uuid4
import copy

with Meta() as meta:
  password = meta.create_user('foo@bar.baz')
  user = {
    'email': 'foo@bar.baz',
    'password': password,
  }

  user_device_0 = copy.deepcopy(user)
  user_device_0['device_id'] = str(uuid4())
  user_device_0['pick_trophonius'] = False

  # Login a user on device 0.
  client0 = Client(meta)
  assert meta.database.sessions.count() == 0
  res = client0.post('login', user_device_0)
  assert res['success']
  res = client0.get('user/self')
  assert res['success']
  assert meta.database.sessions.count() == 1

  # Login the same user but on web.
  web_client0 = Client(meta)
  res = web_client0.post('web-login', user)
  assert res['success']
  res = web_client0.get('user/self')
  assert res['success']
  assert meta.database.sessions.count() == 2

  # Login the same user but on web twice.
  web_client1 = Client(meta)
  res = web_client1.post('web-login', user)
  assert res['success']
  res = web_client1.get('user/self')
  assert res['success']
  assert meta.database.sessions.count() == 3

  # Logout user on device 0.
  res = client0.post('logout')
  assert meta.database.sessions.count() == 2

  # Logout one web session.
  res = web_client1.post('logout')
  assert res['success']
  assert meta.database.sessions.count() == 1

  # Logout the other web session.
  res = web_client0.post('logout')
  assert res['success']
  assert meta.database.sessions.count() == 0
