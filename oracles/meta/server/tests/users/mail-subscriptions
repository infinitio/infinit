#!/usr/bin/env python3

from utils import Meta, User, NoOpMailer
from infinit.oracles.meta import error

unconfirmed_email_leeway = 100

with Meta(enable_emails = True,
          unconfirmed_email_leeway = unconfirmed_email_leeway,
          email_confirmation_cooldown = 0) as meta:
  bob = User(meta)
  alice = User(meta)

  meta.mailer = NoOpMailer()
  meta.mailer.sent == 0

  alice.login()
  alice.sendfile(bob.email)

  # Bob should receive 'offline transfer email'.
  meta.mailer.sent == 1

  bob.login()
  res = bob.get('user/mail_subscription/accept-file-only-offline')
  assert res['success']
  assert res['accept-file-only-offline']

  res = bob.delete('user/mail_subscription/accept-file-only-offline')
  assert res['success']
  assert res['accept-file-only-offline'] == False

  bob.logout()
  alice.sendfile(bob.email)

  # Bob shouldn't receive 'offline transfer email'.
  meta.mailer.sent == 1
  bob.login()

  res = bob.put('user/mail_subscription/accept-file-only-offline')
  assert res['success']
  assert res['accept-file-only-offline'] == True

  res = bob.post('user/resend_confirmation_email/%s' % bob.email)
  assert res['success']
  bob.logout()

  alice.sendfile(bob.email)
  # Bob should receive 'offline transfer email' again.
  meta.mailer.sent == 2

  bob.login()
  res = bob.get('user/mail_subscriptions')
  assert res['success']
  subscriptions = res['subscriptions']

  assert list(map(lambda x: x['status'], subscriptions.values())).count(False) == 0

  for sub in subscriptions.keys():
    res = bob.delete('user/mail_subscription/%s' % sub)
    assert res['success']

  res = bob.get('user/mail_subscriptions')
  assert res['success']
  subscriptions = res['subscriptions']
  assert list(map(lambda x: x['status'], subscriptions.values())).count(True) == 0
