#!/usr/bin/env python3

from utils import Meta, User, Trophonius, NoOpMailer

class MailService(NoOpMailer):

  def __init__(self, expected_template, sender, recipient):
    super().__init__(True)
    self.__expected_template = expected_template
    self.__sender = sender
    self.__recipient = recipient
    self.__sent = False

  def template_message(self, template_name, message):
    assert self.__expected_template == template_name
    assert message['to'][0]['email'] == self.__recipient.email
    self.__sent = True

  @property
  def sent(self):
    return self.__sent

# Peer online.
with Meta(enable_emails = True) as meta, Trophonius(meta) as trophonius:
  bob = User(meta, "bob@infinit.io")
  alice = User(meta, "alice@infinit.io")
  bob.login()
  alice.login()

  trophonius.connect_user(bob)
  trophonius.connect_user(alice)

  meta.mailer = MailService("accept-file-online-offline", bob, alice)

  transaction, res = bob.sendfile(recipient_id = alice.id)
  assert res['success']

  assert meta.mailer.sent == False

# Peer offline.
with Meta(enable_emails = True) as meta, Trophonius(meta) as trophonius:
  bob = User(meta, "bob@infinit.io")
  alice = User(meta, "alice@infinit.io")
  bob.login()
  alice.login()

  trophonius.connect_user(bob)

  meta.mailer = MailService("accept-file-only-offline", bob, alice)

  transaction, res = bob.sendfile(recipient_id = alice.id)
  assert res['success']

  assert meta.mailer.sent
