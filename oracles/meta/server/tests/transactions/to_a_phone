#!/usr/bin/env python3

from utils import *
from bson import ObjectId
from functools import reduce
import sys
from infinit.oracles.meta.server import transaction_status

# Send and merge.
with Meta() as meta:
  alice = User(meta, "alice@infinit.io")
  alice.login()

  ti1 = alice.send(recipient = '+33600000000')[1]['created_transaction_id']
  assertEq(meta.database.users.count(), 2)
  ti2 = alice.send(recipient = '+33600000000')[1]['created_transaction_id']
  assertEq(meta.database.users.count(), 2)
  assert meta.database.users.find_one(
    {'accounts.id': '+33 6 00 00 00 00'})
  recipient = meta.database.users.find_one(
    {'accounts.id': '+33 6 00 00 00 00'})
  assert len(recipient['ghost_code'])
  alice.transaction_update(ti1, transaction_status.INITIALIZED)
  # Only one is visible.
  assertEq(len(alice.transactions), 2)
  bob = User(meta, "bob@infinit.io")
  bob.login()
  assertEq(len(bob.transactions), 0)
  bob.post('ghost/%s/merge' % recipient['ghost_code'])
  assertEq(len(bob.transactions), 2)
  alice.transaction_update(ti2, transaction_status.INITIALIZED)
  assertEq(len(alice.transactions), 2)
  assertEq(len(bob.transactions), 2)
  ti3 = alice.send(recipient = '+33600000000')[1]['created_transaction_id']
  alice.transaction_update(ti3, transaction_status.INITIALIZED)
  assertEq(meta.database.users.count(), 3)
  assertEq(len(alice.transactions), 3)

with Meta() as meta:
  alice = User(meta, "alice@infinit.io")
  alice.login(country_code = "FR")
  ti1 = alice.send(recipient = '+33600000000', use_identifier = True)[1]['created_transaction_id']
  assertEq(meta.database.users.count(), 2)
  ti2 = alice.send(recipient = '0600000000', use_identifier = True)[1]['created_transaction_id']
  print(list(meta.database.users.find({}, {'accounts': 1})))
  assertEq(meta.database.users.count(), 2)
  assert meta.database.users.find_one(
    {'accounts.id': '+33 6 00 00 00 00'})
  assert meta.database.users.find_one(
    {'accounts.id': '+33 6 00 00 00 00'})
  recipientplus = meta.database.users.find_one(
    {'accounts.id': '+33 6 00 00 00 00'})
  recipient = meta.database.users.find_one(
    {'accounts.id': '+33 6 00 00 00 00'})
  assertEq(recipient['_id'], recipientplus['_id'])
  assertEq(recipient['ghost_code'], recipientplus['ghost_code'])
  alice.transaction_update(ti1, transaction_status.INITIALIZED)
  alice.transaction_update(ti2, transaction_status.INITIALIZED)
  bob = User(meta, "bob@infinit.io")
  bob.login()
  assertEq(len(bob.transactions), 0)
  bob.post('ghost/%s/merge' % recipient['ghost_code'])
  assertEq(len(bob.transactions), 2)

# Ghost code, one with country code, the other with no country code.
with Meta() as meta:
  alice = User(meta, "alice@infinit.io")
  # Device push token is needed because
  alice.login(country_code = "FR",
              device_push_token = "31")
  _, res0 = alice.send(recipient = '+33600000000', use_identifier = True, initialize = True)
  assertEq(meta.database.users.count(), 2)
  _, res1 = alice.send(recipient = '0600000000', use_identifier = True, initialize = True)
  assertEq(meta.database.users.count(), 2)
  ti0 = res0['created_transaction_id']
  ti1 = res1['created_transaction_id']
  assert meta.database.users.find_one(
    {'accounts.id': '+33 6 00 00 00 00'})
  assert meta.database.users.find_one(
    {'accounts.id': '+33 6 00 00 00 00'})
  recipientplus = meta.database.users.find_one(
    {'accounts.id': '+33 6 00 00 00 00'})
  recipient = meta.database.users.find_one(
    {'accounts.id': '+33 6 00 00 00 00'})
  extra_transactions = 2
  for _ in range(extra_transactions):
    alice.send(recipient = '0600000000', use_identifier = True, initialize = True)
  assertEq(recipient['_id'], recipientplus['_id'])
  assertEq(recipient['ghost_code'], recipientplus['ghost_code'])
  alice.transaction_update(ti0, transaction_status.INITIALIZED)
  alice.transaction_update(ti1, transaction_status.INITIALIZED)
  alice.transaction_update(ti0, transaction_status.GHOST_UPLOADED)
  alice.transaction_update(ti1, transaction_status.GHOST_UPLOADED)

  ghost_code = res0['recipient']['ghost_code']
  eve = User(meta, "eve@infinit.io")
  eve.login()
  eve.post('ghost/%s/merge' % ghost_code)

  assertEq(len(eve.transactions), 2 + extra_transactions)
  eve.transaction_update(ti0, transaction_status.ACCEPTED)
  eve.transaction_update(ti0, transaction_status.FINISHED)

  eve.transaction_update(ti1, transaction_status.ACCEPTED)
  eve.transaction_update(ti1, transaction_status.FINISHED)

# Ghost code, one with country code, the other with no country code without and
# with sending county_code at login.
with Meta() as meta:
  alice = User(meta, "alice@infinit.io")
  for _ in range(2):
    # Device push token is needed because
    alice.login(country_code = None,
                device_push_token = "31")
    _, res0 = alice.send(recipient = '+33600000000', use_identifier = True, initialize = True)
    assertEq(meta.database.users.count(), 2)
    try:
      _, res1 = alice.send(recipient = '0600000000', use_identifier = True, initialize = True)
      assert False
    except HTTPException as e:
      assertEq(e.status, 400)
    print(list(meta.database.users.find({}, {'accounts': 1})))
    assert 'id' in alice.get('users/+33600000000')
    try:
      alice.get('users/0600000000')
      assert False
    except HTTPException as e:
      assertEq(e.status, 404)
    alice.logout()
    print("+" * 64)
    alice.login(country_code = "FR")
    alice.send(recipient = '+33600000000', use_identifier = True, initialize = True)
    alice.send(recipient = '0600000000', use_identifier = True, initialize = True)
    assertEq(meta.database.users.count(), 2)
    assert 'id' in alice.get('users/+33600000000')
    assert 'id' in alice.get('users/0600000000')

# Faulty numbers.
with Meta() as meta:
  alice = User(meta, "alice@infinit.io")
  def send(alice, country_code, phone):
    alice.login(country_code = country_code, device_push_token = "31")
    _, res0 = alice.send(recipient = phone)
    alice.logout()
  send(alice, 'US', '4074610254')
  send(alice, 'US', '(231) 510-5912')
  send(alice, 'PT', '916197821')
  send(alice, 'US', '004915732638517')
