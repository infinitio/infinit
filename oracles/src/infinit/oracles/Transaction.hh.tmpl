#ifndef INFINIT_ORACLES_TRANSACTION_HH
# define INFINIT_ORACLES_TRANSACTION_HH

# include <iosfwd>
# include <list>
# include <string>

# include <elle/Printable.hh>
# include <elle/UUID.hh>
# include <elle/serialization/Serializer.hh>

<%!
from infinit.oracles.transaction import statuses
%>

namespace infinit
{
  namespace oracles
  {
    class Transaction
      : public elle::Printable
      , public elle::serialization::VirtuallySerializable
    {
    public:
      enum class Status: int
      {
        %for name, value in statuses.items():
          ${name} = ${value},
        %endfor
      };

    /*-------------.
    | Construction |
    `-------------*/
    public:
      Transaction();
      Transaction(std::string const& sender_id,
                  elle::UUID sender_device_id);
      virtual
      ~Transaction() = default;

    /*-----.
    | Data |
    `-----*/
    public:
      std::string id;
      std::string sender_id;
      elle::UUID sender_device_id;
      Status status;
      double ctime;
      double mtime;
      bool is_ghost;

    /*-----------.
    | Properties |
    `-----------*/
    public:
      bool
      empty() const;

    /*----------.
    | Printable |
    `----------*/
    public:
      virtual
      void
      print(std::ostream& stream) const override;
    };

    std::ostream&
    operator <<(std::ostream& out,
                Transaction::Status t);

    std::ostream&
    operator <<(std::ostream& out,
                Transaction const& t);
  }
}

#endif
