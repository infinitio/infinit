import drake
import drake.cxx
import sys

build = None
install = None
check = None

def configure(elle,
              reactor,
              meta_client,
              boost,
              prefix = drake.Path('/usr/local'),
              cxx_toolkit = None,
              cxx_config = None):

  global build, install, check

  cxx_toolkit = cxx_toolkit or drake.cxx.Toolkit()
  cxx_config = cxx_config or drake.cxx.Config()

  local_cxx_config = drake.cxx.Config(cxx_config)
  local_cxx_config += boost.config_program()
  local_cxx_config += boost.config_system()
  local_cxx_config += elle.config
  local_cxx_config += reactor.config
  local_cxx_config += meta_client.config
  local_cxx_config.add_local_include_path('src')
  local_cxx_config.lib_path_runtime('.')
  local_cxx_config.add_system_include_path('json-spirit/include')

  elle_lib = drake.copy(elle.lib_dynamic, 'lib',
                        strip_prefix = True)
  reactor_lib = drake.copy(reactor.lib_dynamic, 'lib',
                           strip_prefix = True)
  meta_client_lib = drake.copy(meta_client.lib, 'lib',
                               strip_prefix = True)

  sources = drake.nodes(
    'src/infinit/oracles/trophonius/server/Client.cc',
    'src/infinit/oracles/trophonius/server/Client.hh',
    'src/infinit/oracles/trophonius/server/Meta.cc',
    'src/infinit/oracles/trophonius/server/Meta.hh',
    'src/infinit/oracles/trophonius/server/User.cc',
    'src/infinit/oracles/trophonius/server/User.hh',
    'src/infinit/oracles/trophonius/server/Trophonius.cc',
    'src/infinit/oracles/trophonius/server/Trophonius.hh',
    'src/infinit/oracles/trophonius/server/fwd.hh',
    'src/infinit/oracles/trophonius/server/exceptions.cc',
    'src/infinit/oracles/trophonius/server/exceptions.hh',
    'src/infinit/oracles/trophonius/server/utils.cc',
    'src/infinit/oracles/trophonius/server/utils.hh',
    'json-spirit/src/reader.cpp',
    'json-spirit/src/value.cpp',
    'json-spirit/src/writer.cpp',
  )

  lib = drake.cxx.DynLib('lib/trophonius',
                         sources + [elle_lib, reactor_lib, meta_client_lib],
                         cxx_toolkit,
                         local_cxx_config)

  exe_cxx_config = drake.cxx.Config(local_cxx_config)
  exe_cxx_config.lib_path_runtime('../lib')

  exe_sources = drake.nodes(
    'src/main.cc',
  )

  trophonius = drake.cxx.Executable(
    'bin/trophonius',
    exe_sources + [lib, elle_lib, reactor_lib, meta_client_lib],
    cxx_toolkit,
    exe_cxx_config)

  build = drake.Rule('build')
  build << trophonius

  install = drake.Rule('install')
  install << drake.install(trophonius, prefix)

  check = drake.Rule('check')
