#!/usr/bin/env python3

# utils first, beware of system OpenSSL.
from utils import *

import elle.log

from infinit.oracles.transaction import statuses

import oracles.sisyphus
import oracles.sisyphus.boulders.drip

ELLE_LOG_COMPONENT = 'infinit.oracles.sisyphus.boulders.drip'

class DelightSender(oracles.sisyphus.boulders.drip.DelightSender):

  def _pick_template(self, template, users):
    return oracles.sisyphus.boulders.drip.Drip._pick_template(
      self, template, users)

def send(sender, recipient, files = ['foobar']):
  tid = transaction_create(meta, sender, recipient)
  meta._cloud_buffer(tid, sender)
  meta._transaction_update(tid, statuses['ghost_uploaded'],
                           'device', None, sender)
  meta.transaction_download(tid)
  return tid

with mongobox.MongoBox() as mongo:
  with Meta(mongo_port = mongo.port, enable_emails = False) as meta:
    emailer = DummyEmailer()
    sisy = oracles.sisyphus.Sisyphus(mongo_port = mongo.port,
                                     emailer = emailer)
    gestapo(sisy._Sisyphus__mongo)
    reminder = DelightSender(sisy)
    ghost_email = 'ghost@infinit.io'

    # Check nothing is sent with no users
    sisy.boulders_run()
    assert not emailer.emails

    # Check deleted user don't receive emails
    del1 = user_register(meta, 'del1@infinit.io')
    meta.user_delete(del1)
    del2 = user_register(meta, 'del2@infinit.io')
    for i in range(reminder.threshold_first):
      send(del2, ghost_email)
    meta.user_delete(del2)

    # Create senders
    device = 'device'
    sender1 = user_register(meta, 'sender1@infinit.io')
    sender2 = user_register(meta, 'sender2@infinit.io')
    sender3 = user_register(meta, 'sender3@infinit.io')

    for i in range(reminder.threshold_first):
      sisy.boulders_run()
      assert not emailer.emails
      send(sender1, ghost_email)
    sisy.boulders_run()
    check_mail(emailer.emails,
               'sender1@infinit.io', 'drip_delight-sender_1')

    send(sender1, ghost_email)
    sisy.boulders_run()
    assert not emailer.emails
