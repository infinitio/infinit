#!/usr/bin/env python3

import os
import sys
from itertools import chain

SELF = os.path.realpath(__file__)
SELF_DIR = os.path.dirname(SELF)
sys.path.insert(
  0,
  '%s/../lib/python%s.%s' % tuple([SELF_DIR,
                                   sys.version_info[0],
                                   sys.version_info[1]]))
sys.path.insert(0, '%s/../lib/python' % os.path.dirname(SELF))

# Do not reorder those lines, or a python native module component will
# load the system libcrypto.so, which will prevent loading our
# libcrypto.so through a RPATH on our native module.
import infinit.oracles.sisyphus
import infinit.oracles.sisyphus.boulders
import infinit.oracles.sisyphus.boulders.apns
import infinit.oracles.sisyphus.boulders.drip
import infinit.oracles.metrics
import infinit.oracles.emailer
import bottle
import elle.log

import optparse
usage = "usage: %prog [options]"
parser = optparse.OptionParser(usage = usage)
parser.add_option('--port',
                  action = 'store',
                  help = 'Port to listen on',
                  default = '8080')
parser.add_option('--mongo-port',
                  action = 'store',
                  help = 'Mongodb port',
                  type = int,
                  default = None)
parser.add_option('--mongo-host',
                  action = 'append',
                  help = 'Mongodb host',
                  type = str,
                  default = None)
parser.add_option('--mongo-replica-set',
                  action = 'store_true',
                  help = 'Use mongo replica set',
                  default = False)

options, _ = parser.parse_args()

args = {}
if options.mongo_host:
  args['mongo_host'] = options.mongo_host

swu_key = 'live_7e775f6f0e1404802a5fbbc0fcfa9c238b065c49'
# Send to mefyl@infinit.io
# swu_key = 'test_8a19af75d006192a3e51dcab310fa1ed428e53ba'

args['emailer'] = infinit.oracles.emailer.SendWithUsEmailer(
  api_key = swu_key)
args['metrics'] = infinit.oracles.metrics.Metrics()

app = infinit.oracles.sisyphus.Sisyphus(**args)

pretend = False
infinit.oracles.sisyphus.boulders.drip.ActivityReminder(app, pretend = pretend)
infinit.oracles.sisyphus.boulders.drip.ConfirmSignup(app, pretend = pretend)
infinit.oracles.sisyphus.boulders.drip.DelightRecipient(app, pretend = pretend)
infinit.oracles.sisyphus.boulders.drip.DelightSender(app, pretend = pretend)
infinit.oracles.sisyphus.boulders.drip.GhostReminder(app, pretend = pretend)
infinit.oracles.sisyphus.boulders.drip.Onboarding(app, pretend = pretend)
infinit.oracles.sisyphus.boulders.drip.Retention(app, pretend = pretend)
# infinit.oracles.sisyphus.boulders.drip.WeeklyReport(app, pretend = pretend)

apns_cert = '%s/../share/aps.pem' % SELF_DIR
apns_cert_prod = '%s/../share/aps_production.pem' % SELF_DIR
infinit.oracles.sisyphus.boulders.apns.APNSUnregister(
  app,
  certificate = apns_cert_prod,
  production = True,
)

bottle.run(app = app,
           host = '127.0.0.1',
           port = int(options.port))
