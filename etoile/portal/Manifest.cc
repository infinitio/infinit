#include <etoile/portal/Manifest.hh>

namespace etoile
{
  namespace portal
  {
    RPC::RPC(infinit::protocol::ChanneledStream& channels):
      infinit::protocol::RPC<elle::serialize::InputBinaryArchive,
                             elle::serialize::OutputBinaryArchive>(channels),
      authenticate("authenticate", *this),
      pathresolve("pathresolve", *this),
      pathlocate("pathlocate", *this),
      pathway("pathway", *this),
      objectload("objectload", *this),
      objectinformation("objectinformation", *this),
      objectdiscard("objectdiscard", *this),
      objectstore("objectstore", *this),
      objectdestroy("objectdestroy", *this),
      filecreate("filecreate", *this),
      fileload("fileload", *this),
      filewrite("filewrite", *this),
      fileread("fileread", *this),
      fileadjust("fileadjust", *this),
      filediscard("filediscard", *this),
      filestore("filestore", *this),
      filedestroy("filedestroy", *this),
      directorycreate("directorycreate", *this),
      directoryload("directoryload", *this),
      directoryadd("directoryadd", *this),
      directorylookup("directorylookup", *this),
      directoryentry("directoryentry", *this),
      directoryconsult("directoryconsult", *this),
      directoryrename("directoryrename", *this),
      directoryremove("directoryremove", *this),
      directorydiscard("directorydiscard", *this),
      directorystore("directorystore", *this),
      directorydestroy("directorydestroy", *this),
      linkcreate("linkcreate", *this),
      linkload("linkload", *this),
      linkbind("linkbind", *this),
      linkresolve("linkresolve", *this),
      linkdiscard("linkdiscard", *this),
      linkstore("linkstore", *this),
      linkdestroy("linkdestroy", *this),
      accesslookup("accesslookup", *this),
      accessconsult("accessconsult", *this),
      accessgrant("accessgrant", *this),
      accessrevoke("accessrevoke", *this),
      attributesset("attributesset", *this),
      attributesget("attributesget", *this),
      attributesfetch("attributesfetch", *this),
      attributesomit("attributesomit", *this),
      groupcreate("groupcreate", *this),
      groupload("groupload", *this),
      groupinformation("groupinformation", *this),
      groupadd("groupadd", *this),
      grouplookup("grouplookup", *this),
      groupconsult("groupconsult", *this),
      groupremove("groupremove", *this),
      groupdiscard("groupdiscard", *this),
      groupstore("groupstore", *this),
      groupdestroy("groupdestroy", *this)
    {}
  }
}
