#include <atomic>

#include <boost/filesystem.hpp>
#include <boost/filesystem/fstream.hpp>

#include <elle/AtomicFile.hh>
#include <elle/Error.hh>
#include <elle/container/vector.hh>
#include <elle/memory.hh>
#include <elle/os/environ.hh>
#include <elle/os/path.hh>
#include <elle/serialization/json.hh>

#include <infinit/oracles/trophonius/Client.hh>

#include <surface/gap/State.hh>
#include <surface/gap/Transaction.hh>
#include <surface/gap/onboarding/Transaction.hh>
#include <surface/gap/Exception.hh>

ELLE_LOG_COMPONENT("surface.gap.State.Transaction");

extern const std::vector<unsigned char> onboarding_avatar;

namespace surface
{
  namespace gap
  {
    /// Generate a id for local user.
    static
    uint32_t
    generate_id()
    {
      static std::atomic<uint32_t> id{null_id};
      return ++id;
    }

    State::TransactionNotFoundException::TransactionNotFoundException(
      uint32_t id):
      Exception{
      gap_transaction_doesnt_exist, elle::sprintf("unknown transaction %s", id)}
    {
      ELLE_ERR("%s: transaction %s not found", *this, id);
    }

    State::TransactionNotFoundException::TransactionNotFoundException(
      std::string const& id):
      Exception{
      gap_transaction_doesnt_exist, elle::sprintf("unknown transaction %s", id)}
    {
      ELLE_ERR("%s: transaction %s not found", *this, id);
    }

    uint32_t
    State::create_link(std::vector<std::string> const& files,
                       std::string const& message)
    {
      ELLE_TRACE_SCOPE("%s: create link for %s", *this, files);
      auto id = generate_id();
      this->_transactions.emplace(
        id,
        elle::make_unique<Transaction>(*this, id, std::move(files), message));
      return id;
    }

    Transaction&
    State::transaction_peer_create(std::string const& peer_id,
                                   std::vector<std::string> files,
                                   std::string const& message)
    {
      ELLE_TRACE_SCOPE("%s: send files to %s", *this, peer_id);
      auto id = generate_id();
      auto transaction =
        elle::make_unique<Transaction>(*this, id, peer_id,
                                       std::move(files), message);
      auto& res = *transaction;
      this->_transactions.emplace(id, std::move(transaction));
      return res;
    }

    uint32_t
    State::send_files(std::string const& peer_id,
                      std::vector<std::string> files,
                      std::string const& message)
    {
      return this->transaction_peer_create(peer_id, files, message).id();
    }

    uint32_t
    State::start_onboarding(std::string const& file_path,
                            reactor::Duration const& transfer_duration)
    {
      ELLE_TRACE_SCOPE("%s: create an onboarding transaction", *this);

      // XXX: Hard coding contact@infinit.io is a bad idea but we are forced to:
      // - We want the gui to send to contact@infinit.io if it's clicked on the
      //   interface.
      // - We can't use contact@infinit.io directly because we don't want the
      //   behavior of the onboarding to depend on the status of a real user.
      // - The gui has a duplicated model, so popping the onboarding user from
      //   the state will just break the gui model.
      static User onboarder("528a95c8e9a23c66a044ef66",
                            "Infinit Team",
                            "Infinit",
                            "ok",
                            {"Infinit"});

      auto onboarder_id = this->user_indexes().at(
        this->user_sync(onboarder).id);

      if (this->_avatars.find(onboarder_id) == this->_avatars.end())
      {
        this->_avatars.emplace(onboarder_id,
                               elle::Buffer(onboarding_avatar.data(),
                                            onboarding_avatar.size()));
        this->enqueue(AvatarAvailableNotification(onboarder_id));
      }

      auto id = generate_id();
      this->_transactions.emplace(
        id,
        elle::make_unique<onboarding::Transaction>(
          *this,
          id,
          onboarder,
          file_path,
          transfer_duration));
      return id;
    }

    void
    State::_transactions_init()
    {
      ELLE_ASSERT(this->_transactions.empty());
      boost::filesystem::path snapshots_path(
        this->local_configuration().transactions_directory(this->me().id));
      ELLE_TRACE("%s: load transactions from snapshots at %s",
                 *this, snapshots_path)
      {
        create_directories(snapshots_path);
        using boost::filesystem::directory_iterator;
        for (auto it = directory_iterator(snapshots_path);
             it != directory_iterator();
             ++it)
        {
          auto snapshot_path = boost::filesystem::path(it->path());
          ELLE_TRACE_SCOPE("%s: load transaction snapshot %s",
                           *this, snapshot_path);
          try
          {
            elle::AtomicFile source(snapshot_path / "transaction.snapshot");
            if (!source.exists())
              throw elle::Error("transaction snapshot is missing.");
            source.read() << [&] (elle::AtomicFile::Read& read)
            {
              elle::serialization::json::SerializerIn input(read.stream());
              Transaction::Snapshot snapshot(input);
              auto const& data = *snapshot.data();
              if (!data.id.empty())
              {
                auto it = std::find_if(
                  std::begin(this->_transactions),
                  std::end(this->_transactions),
                  [&] (TransactionConstPair const& pair)
                  {
                    return (pair.second->data()->id == data.id);
                  });
                if (it != std::end(this->_transactions))
                  throw elle::Exception(
                    elle::sprintf(
                      "duplicate snapshot for transaction %s", data.id));
              }
              auto _id = generate_id();
              this->_transactions.emplace(
                _id,
                elle::make_unique<Transaction>(
                  *this, _id, std::move(snapshot), snapshot_path));
            };
          }
          catch (elle::Exception const& ) // FIXME: should be elle::Error
          {
            ELLE_WARN("%s: error while loading snapshot %s: %s",
                      *this, *it, elle::exception_string());
            elle::os::path::force_write_permissions(*it);
            remove_all(*it);
            continue;
          }
        }
      }
    }

    void
    State::_peer_transaction_resync(std::unordered_map<std::string, infinit::oracles::PeerTransaction> const& transactions)
    {
      if (!elle::os::getenv("INFINIT_DISABLE_META_SYNC", "").empty())
      {
        ELLE_ERR("Transaction resync disabled");
        return;
      }
      ELLE_TRACE("%s: resynchronize transaction history from meta", *this)
      {
        for (auto const& transaction_pair: transactions)
        {
          auto const& transaction = transaction_pair.second;
          auto it = std::find_if(
            std::begin(this->_transactions),
            std::end(this->_transactions),
            [&] (TransactionConstPair const& pair)
            {
              return (!pair.second->data()->id.empty()) &&
                     ( pair.second->data()->id == transaction.id);
            });
          if (it != std::end(this->_transactions))
          {
            it->second->on_transaction_update(
              std::make_shared<infinit::oracles::PeerTransaction>(transaction));
            continue;
          }
          ELLE_DUMP("ensure that both user are fetched")
          {
            this->user(transaction.sender_id);
            this->user(transaction.recipient_id);
          }
          bool sender = (this->me().id == transaction.sender_id);
          auto const& final_statuses = sender
            ? Transaction::sender_final_statuses
            : Transaction::recipient_final_statuses;
          bool history =
            std::find(final_statuses.begin(),
                      final_statuses.end(),
                      transaction.status) != final_statuses.end();
          auto _id = generate_id();
          ELLE_TRACE("%s: create historical peer transactions from data: %s",
                     *this, transaction)
            this->_transactions.emplace(
              _id,
              elle::make_unique<Transaction>(
                *this, _id,
                std::make_shared<infinit::oracles::PeerTransaction>(transaction),
                history));
        }
      }
    }

    void
    State::_link_transaction_resync(std::vector<infinit::oracles::LinkTransaction> const& links)
    {
      if (!elle::os::getenv("INFINIT_DISABLE_LINK_SYNC", "").empty())
      {
        ELLE_WARN("%s: link transaction sync disabled", *this);
        return;
      }
      ELLE_TRACE("%s: synchronize link transactions from meta", *this)
        for (auto& transaction: links)
        {
          auto it = std::find_if(
            std::begin(this->_transactions),
            std::end(this->_transactions),
            [&] (TransactionConstPair const& pair)
            {
              return (!pair.second->data()->id.empty()) &&
                     ( pair.second->data()->id == transaction.id);
            });
          if (it != std::end(this->_transactions))
          {
            it->second->on_transaction_update(
              std::make_shared<infinit::oracles::LinkTransaction>(transaction));
            continue;
          }
          auto _id = generate_id();
          ELLE_TRACE("%s: create historical link transaction from data: %s",
                     *this, transaction)
          {
            bool history =
              std::find(Transaction::sender_final_statuses.begin(),
                        Transaction::sender_final_statuses.end(),
                        transaction.status) != Transaction::sender_final_statuses.end();
            this->_transactions.emplace(
              _id,
              elle::make_unique<Transaction>(
                *this, _id,
                std::make_shared<infinit::oracles::LinkTransaction>(transaction),
                history /* history */));
          }
        }
    }

    void
    State::_transactions_clear()
    {
      ELLE_TRACE_SCOPE("%s: clear transactions", *this);
      // We assume that Transaction destructor doesn't throw.
      this->_transactions.clear();
    }

    void
    State::_on_transaction_update(
      std::shared_ptr<infinit::oracles::Transaction> const& notif)
    {
      ELLE_TRACE_SCOPE("%s: receive transaction data %s", *this, notif->id);
      ELLE_ASSERT(!notif->id.empty());
      ELLE_DUMP("%s: data: %s", *this, *notif);
      // To avoid processing notifications while we are waiting for an
      // answer from meta.
      // This is important ONLY when we still have no id (e.g: when creating a
      // transaction / link).
      // XXX: When the 2 step link/transaction creation is implemented, get rid
      // of that code lock.
      {
        if (!this->transaction_update_lock.opened())
          ELLE_LOG("%s: waiting for response from meta", *this);
        this->transaction_update_lock.wait();
      }
      auto it = std::find_if(
        std::begin(this->_transactions),
        std::end(this->_transactions),
        [&] (TransactionConstPair const& pair)
        {
          return (!pair.second->data()->id.empty()) &&
                 (pair.second->data()->id == notif->id);
        });
      if (it == std::end(this->_transactions))
      {
        ELLE_TRACE_SCOPE("%s: create transaction %s", *this, notif->id);
        try
        {
          auto id = generate_id();
          auto transaction = elle::make_unique<Transaction>(*this, id, notif);
          // Notify GAP a transaction was created.
          if (auto peer_data =
            std::dynamic_pointer_cast<infinit::oracles::PeerTransaction>(notif))
          {
            surface::gap::PeerTransaction notification(
              id,
              transaction->status(),
              this->user_indexes().at(peer_data->sender_id),
              peer_data->sender_device_id,
              this->user_indexes().at(peer_data->recipient_id),
              peer_data->recipient_device_id,
              peer_data->mtime,
              peer_data->files,
              peer_data->total_size,
              peer_data->is_directory,
              peer_data->message,
              peer_data->canceler);
            this->enqueue(notification);
          }
          else if (auto link_data =
            std::dynamic_pointer_cast<infinit::oracles::LinkTransaction>(notif))
          {
            surface::gap::LinkTransaction notification(
              id,
              link_data->name,
              link_data->mtime,
              link_data->share_link,
              link_data->click_count,
              transaction->status(),
              link_data->sender_device_id);
            this->enqueue(notification);
          }
          this->_transactions.emplace(id, std::move(transaction));
        }
        catch (elle::Error const& e)
        {
          ELLE_WARN("%s: unable to create transaction from server data: %s",
                    *this, elle::exception_string());
          try
          {
            if (std::dynamic_pointer_cast<infinit::oracles::PeerTransaction>(notif))
              this->meta().update_transaction(
                notif->id, infinit::oracles::Transaction::Status::failed);
            else if (std::dynamic_pointer_cast<infinit::oracles::LinkTransaction>(notif))
              this->meta().update_link(
                notif->id,
                0.0f,
                infinit::oracles::Transaction::Status::failed);
          }
          catch (infinit::oracles::meta::Exception const& e)
          {
            using infinit::oracles::meta::Error;
            if (e.err != Error::transaction_operation_not_permitted &&
                e.err != Error::transaction_already_finalized)
            {
              ELLE_ERR("%s: unable to fail transaction: %s",
                       *this, elle::exception_string());
              throw;
            }
          }
          catch (...)
          {
            ELLE_ERR("%s: unable to fail transaction: %s",
                     *this, elle::exception_string());
          }
        }
      }
      else
      {
        ELLE_TRACE_SCOPE("%s: update transaction %s", *this, notif->id);
        it->second->on_transaction_update(notif);
      }
    }

    void
    State::_on_peer_reachability_updated(
      infinit::oracles::trophonius::PeerReachabilityNotification const& notif)
    {
      ELLE_TRACE_SCOPE(
        "%s: peer %spublished his interfaces for transaction %s",
        *this, notif.status ? "" : "un", notif.transaction_id);
      ELLE_ASSERT(!notif.transaction_id.empty());
      auto it = std::find_if(
        std::begin(this->_transactions),
        std::end(this->_transactions),
        [&] (TransactionConstPair const& pair)
        {
          return (!pair.second->data()->id.empty()) &&
                 (pair.second->data()->id == notif.transaction_id);
        });
      if (it == std::end(this->_transactions))
      {
        ELLE_WARN("interface publication: transaction %s doesn't exist",
                  notif.transaction_id);
        return;
      }
      if (notif.status)
        it->second->notify_peer_reachable(notif.endpoints_local,
                                          notif.endpoints_public);
      else
        it->second->notify_peer_unreachable();
    }
  }
}

const std::vector<unsigned char> onboarding_avatar = {
  0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
  0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0xca,
  0x08, 0x06, 0x00, 0x00, 0x00, 0xe4, 0x65, 0xdf, 0xa8, 0x00, 0x00, 0x24,
  0xde, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xed, 0x9d, 0x77, 0x80, 0x15,
  0xd5, 0xd9, 0xc6, 0x9f, 0x99, 0x33, 0x33, 0xb7, 0xb1, 0x2c, 0xbd, 0xb3,
  0x94, 0xa5, 0xac, 0xd2, 0x45, 0x8a, 0x08, 0x08, 0x62, 0x17, 0x8d, 0x31,
  0x31, 0xd1, 0x44, 0x4d, 0x54, 0x12, 0xfc, 0x44, 0x14, 0x45, 0x23, 0x41,
  0x14, 0x45, 0x91, 0x2a, 0x98, 0x68, 0xe2, 0xa7, 0xf9, 0x14, 0x0b, 0x89,
  0x1a, 0x63, 0xac, 0xa0, 0x58, 0x01, 0xa5, 0x2e, 0x7d, 0x59, 0xfa, 0xd2,
  0xab, 0xec, 0x2e, 0x6c, 0xbb, 0x65, 0x66, 0xce, 0x99, 0xef, 0x8f, 0x0d,
  0x11, 0x61, 0xef, 0xbd, 0x33, 0x77, 0xa7, 0xdc, 0xbb, 0x9c, 0xdf, 0x1f,
  0xfe, 0xe1, 0x3d, 0x73, 0xce, 0xcb, 0xdd, 0x7d, 0x76, 0x66, 0xce, 0x79,
  0xdf, 0xe7, 0x15, 0x0c, 0xc3, 0x30, 0xc0, 0xe1, 0x70, 0x12, 0x22, 0x7a,
  0x1d, 0x00, 0x87, 0x93, 0x09, 0x70, 0xa1, 0x70, 0x38, 0x26, 0xe0, 0x42,
  0xe1, 0x70, 0x4c, 0xc0, 0x85, 0xc2, 0xe1, 0x98, 0x80, 0x0b, 0x85, 0xc3,
  0x31, 0x01, 0x17, 0x0a, 0x87, 0x63, 0x02, 0x2e, 0x14, 0x0e, 0xc7, 0x04,
  0x5c, 0x28, 0x1c, 0x8e, 0x09, 0xb8, 0x50, 0x38, 0x1c, 0x13, 0x70, 0xa1,
  0x70, 0x38, 0x26, 0xe0, 0x42, 0xe1, 0x70, 0x4c, 0xc0, 0x85, 0xc2, 0xe1,
  0x98, 0x80, 0x0b, 0x85, 0xc3, 0x31, 0x01, 0x17, 0x0a, 0x87, 0x63, 0x02,
  0x2e, 0x14, 0x0e, 0xc7, 0x04, 0x5c, 0x28, 0x1c, 0x8e, 0x09, 0xb8, 0x50,
  0x38, 0x1c, 0x13, 0x70, 0xa1, 0x70, 0x38, 0x26, 0xe0, 0x42, 0xe1, 0x70,
  0x4c, 0xc0, 0x85, 0xc2, 0xe1, 0x98, 0x80, 0x0b, 0x85, 0xc3, 0x31, 0x01,
  0x17, 0x0a, 0x87, 0x63, 0x02, 0x2e, 0x14, 0x0e, 0xc7, 0x04, 0x5c, 0x28,
  0x1c, 0x8e, 0x09, 0xb8, 0x50, 0x38, 0x1c, 0x13, 0x70, 0xa1, 0x70, 0x38,
  0x26, 0xe0, 0x42, 0xe1, 0x70, 0x4c, 0x20, 0x79, 0x1d, 0x80, 0x13, 0x30,
  0x4d, 0x03, 0x3b, 0xb0, 0x1f, 0x74, 0xcf, 0x6e, 0xd0, 0x43, 0x87, 0x20,
  0x9c, 0x28, 0x01, 0x2d, 0x2d, 0x85, 0xa1, 0xa9, 0x10, 0x75, 0x0a, 0x88,
  0x02, 0x84, 0xac, 0x2c, 0x08, 0x59, 0x0d, 0x20, 0xb4, 0x68, 0x01, 0xd2,
  0xbe, 0x03, 0xc4, 0x0e, 0x1d, 0x40, 0x9a, 0x36, 0xf3, 0x3a, 0x74, 0x4e,
  0x9a, 0x22, 0xd4, 0x15, 0x93, 0x6e, 0xbd, 0xb4, 0x14, 0x74, 0x5d, 0x3e,
  0xe8, 0x86, 0x0d, 0xa0, 0x85, 0x05, 0x00, 0x4b, 0xe1, 0x9f, 0xd5, 0xaa,
  0x25, 0xa4, 0x3e, 0x17, 0x42, 0x19, 0x3c, 0x04, 0xa4, 0x55, 0x6b, 0xfb,
  0x83, 0xe4, 0x64, 0x2c, 0x19, 0x2f, 0x14, 0xbd, 0x68, 0x17, 0x62, 0x8b,
  0x16, 0x82, 0xe5, 0xe7, 0x03, 0x8c, 0xd9, 0x33, 0x29, 0xd5, 0x41, 0xfa,
  0x5c, 0x00, 0x79, 0xe4, 0xf5, 0x90, 0xbb, 0x9e, 0x67, 0xcf, 0x9c, 0x9c,
  0x8c, 0x26, 0x23, 0x85, 0xc2, 0x34, 0x0d, 0xda, 0x9a, 0x7c, 0x68, 0x8b,
  0x16, 0xc2, 0xd8, 0xb3, 0xc7, 0xd1, 0xb5, 0xa4, 0xbe, 0xfd, 0xa0, 0xdc,
  0xf2, 0x2b, 0xfe, 0x58, 0x76, 0x8e, 0x93, 0x71, 0x42, 0xd1, 0x0a, 0x0b,
  0x10, 0x9d, 0xf7, 0x7f, 0xc0, 0xf1, 0x62, 0xd7, 0xd6, 0x64, 0x32, 0x41,
  0xe0, 0xd6, 0xdf, 0x40, 0x19, 0x36, 0xc2, 0xb5, 0x35, 0x39, 0xe9, 0x45,
  0xc6, 0x08, 0x85, 0x55, 0x94, 0x23, 0xf6, 0xf7, 0xf9, 0xd0, 0x57, 0x2c,
  0xf3, 0x2c, 0x06, 0xe9, 0xa2, 0x8b, 0xe1, 0xbb, 0x63, 0x14, 0x44, 0x9f,
  0xe2, 0x59, 0x0c, 0x1c, 0x6f, 0xc8, 0x08, 0xa1, 0xa8, 0x4b, 0x97, 0x20,
  0xf6, 0xd6, 0x7c, 0x20, 0x1c, 0xf6, 0x3a, 0x14, 0x08, 0x5d, 0xbb, 0x20,
  0x38, 0xee, 0x61, 0x88, 0xc1, 0xa0, 0xd7, 0xa1, 0x70, 0x5c, 0x24, 0xad,
  0x85, 0x42, 0x23, 0x11, 0xc4, 0x5e, 0xfc, 0x0b, 0xe8, 0xc6, 0xf5, 0x5e,
  0x87, 0xf2, 0x23, 0x84, 0x0e, 0xed, 0x10, 0x7c, 0x68, 0x22, 0xc4, 0x7a,
  0xf5, 0xbc, 0x0e, 0x85, 0xe3, 0x12, 0x69, 0x2b, 0x14, 0x7a, 0xf2, 0x24,
  0x22, 0xcf, 0xce, 0x82, 0xb1, 0x7f, 0xaf, 0xd7, 0xa1, 0xd4, 0x88, 0x98,
  0xdb, 0x09, 0xfe, 0x09, 0x93, 0x40, 0x14, 0xd9, 0xeb, 0x50, 0x38, 0x2e,
  0x90, 0x96, 0x27, 0xf3, 0xf4, 0xf0, 0x21, 0x54, 0x3d, 0x39, 0x39, 0x6d,
  0x45, 0x02, 0x00, 0xac, 0x68, 0x17, 0xd4, 0x79, 0xaf, 0x78, 0x1d, 0x06,
  0xc7, 0x25, 0xd2, 0x4e, 0x28, 0xfa, 0x81, 0xfd, 0xa8, 0x7a, 0xea, 0x31,
  0x08, 0xa5, 0xee, 0xed, 0x6a, 0xa5, 0x8a, 0xbe, 0xfc, 0x5b, 0xc4, 0xbe,
  0x5c, 0xe4, 0x75, 0x18, 0x1c, 0x17, 0x48, 0x2b, 0xa1, 0xd0, 0xb2, 0x32,
  0x44, 0xe6, 0x3e, 0x0b, 0x21, 0x1c, 0xf3, 0x3a, 0x14, 0xd3, 0x44, 0xdf,
  0x79, 0x0b, 0xf4, 0x44, 0xa9, 0xd7, 0x61, 0x70, 0x1c, 0x26, 0x6d, 0xde,
  0x51, 0xa8, 0xaa, 0x21, 0x3a, 0xfd, 0x69, 0xb0, 0xa2, 0x5d, 0xf6, 0x4c,
  0x28, 0xcb, 0x20, 0xe7, 0x9d, 0x0f, 0xa1, 0x73, 0x67, 0x90, 0x8e, 0xb9,
  0x20, 0xcd, 0x9a, 0x43, 0xa8, 0x97, 0x05, 0x43, 0x92, 0x21, 0xc4, 0x22,
  0x60, 0xc5, 0xc5, 0xa0, 0xfb, 0xf6, 0x80, 0x6d, 0x2a, 0x80, 0xbe, 0x69,
  0x03, 0xa0, 0x69, 0x29, 0x2f, 0x45, 0xfa, 0xf5, 0x43, 0xf0, 0xde, 0x71,
  0xf6, 0xc4, 0xcd, 0x49, 0x4b, 0xd2, 0x46, 0x28, 0x91, 0xf9, 0x6f, 0x40,
  0xff, 0xa2, 0xf6, 0x8f, 0x31, 0x42, 0x5e, 0x1e, 0xe4, 0xe1, 0x97, 0x41,
  0xee, 0xd9, 0xcb, 0xf4, 0x16, 0x2e, 0xad, 0xa8, 0x80, 0xfa, 0xe9, 0x02,
  0xc4, 0x16, 0x2d, 0x04, 0xd1, 0x69, 0x4a, 0xeb, 0xfa, 0x1f, 0x9e, 0x00,
  0xb9, 0x7b, 0x8f, 0x94, 0xae, 0xe5, 0xa4, 0x3f, 0x69, 0x21, 0x14, 0x7d,
  0xff, 0x3e, 0x44, 0x26, 0x4d, 0x00, 0x84, 0x14, 0x9f, 0x04, 0xa9, 0x0e,
  0x69, 0xc8, 0x50, 0xc8, 0xd7, 0x5c, 0x07, 0xa9, 0x6d, 0x4e, 0xca, 0x71,
  0xd0, 0xa3, 0x47, 0x11, 0x7d, 0x6e, 0x16, 0xd8, 0x91, 0xa3, 0x96, 0xaf,
  0x15, 0xbb, 0x9d, 0x8f, 0xd0, 0x1f, 0x1e, 0x4d, 0x79, 0x6d, 0x4e, 0x7a,
  0x93, 0x16, 0x42, 0x09, 0x4f, 0x7d, 0x02, 0x74, 0xc7, 0xce, 0xd4, 0x2e,
  0x6e, 0x97, 0x03, 0xff, 0xed, 0x77, 0x42, 0xee, 0xd4, 0xd9, 0x96, 0x58,
  0x58, 0x38, 0x8c, 0xd8, 0xcb, 0x7f, 0x85, 0xbe, 0xde, 0xe2, 0xd9, 0x0d,
  0xd5, 0x11, 0x9c, 0x39, 0x87, 0x67, 0x1d, 0xd7, 0x51, 0x3c, 0x7f, 0x99,
  0xd7, 0xd6, 0xe4, 0xa7, 0x2c, 0x12, 0xf1, 0xa2, 0x41, 0x08, 0x4e, 0x9a,
  0x62, 0x9b, 0x48, 0x00, 0x40, 0x0c, 0x06, 0x11, 0x18, 0xf7, 0x10, 0xa4,
  0xe1, 0x97, 0x5a, 0xbb, 0x90, 0x48, 0x88, 0x7d, 0xce, 0x77, 0xc0, 0xea,
  0x2a, 0x9e, 0x0b, 0x45, 0x5f, 0x9e, 0x5a, 0xee, 0x96, 0x74, 0xf9, 0x95,
  0x08, 0xdd, 0x3d, 0xc6, 0xb1, 0x03, 0x3f, 0xdf, 0xaf, 0x6f, 0x87, 0x90,
  0xd7, 0xd5, 0xd2, 0x35, 0xea, 0xb2, 0x65, 0xa0, 0x6a, 0xea, 0x9b, 0x02,
  0x9c, 0xf4, 0xc5, 0x53, 0xa1, 0xd0, 0x48, 0x04, 0xea, 0xa6, 0x75, 0x96,
  0xaf, 0x13, 0xbb, 0x9d, 0x0f, 0xe5, 0x96, 0x5f, 0x3b, 0x10, 0xd1, 0x69,
  0x6b, 0xc8, 0x32, 0x02, 0xf7, 0xdc, 0x0f, 0xd6, 0x20, 0xdb, 0xf4, 0x35,
  0x44, 0x8d, 0x82, 0xee, 0xd8, 0xea, 0x60, 0x54, 0x1c, 0xaf, 0xf0, 0x54,
  0x28, 0xfa, 0x86, 0xf5, 0x10, 0x35, 0x6b, 0xbb, 0x4c, 0x46, 0x30, 0x80,
  0xc0, 0xdd, 0x63, 0x41, 0x08, 0x71, 0x28, 0xaa, 0x1f, 0x20, 0xd9, 0xd9,
  0x08, 0xdd, 0xf7, 0x20, 0x60, 0x98, 0x2f, 0x08, 0xa3, 0x1b, 0x36, 0x38,
  0x17, 0x10, 0xc7, 0x33, 0xbc, 0x15, 0x4a, 0x0a, 0xc9, 0x8e, 0xbe, 0x6b,
  0xaf, 0x83, 0x58, 0xbf, 0xbe, 0x03, 0xd1, 0xd4, 0x8c, 0x94, 0xdb, 0x09,
  0xd2, 0xf0, 0xcb, 0x4c, 0x8f, 0xd7, 0xb9, 0x50, 0xea, 0x24, 0x9e, 0x0a,
  0x85, 0x1d, 0x3e, 0x68, 0x69, 0xbc, 0x11, 0xf4, 0x41, 0xbe, 0xfc, 0x6a,
  0x87, 0xa2, 0x89, 0x8f, 0xfc, 0xd3, 0x1b, 0x41, 0x15, 0x93, 0x3e, 0x1c,
  0xc7, 0x8f, 0x81, 0x7e, 0x7f, 0xcc, 0xd9, 0x80, 0x38, 0xae, 0xe3, 0xad,
  0x50, 0x8e, 0x1c, 0xb1, 0x34, 0x5e, 0xee, 0xdd, 0xdf, 0x93, 0xa2, 0x29,
  0xa9, 0x41, 0x43, 0xf8, 0x46, 0xfe, 0xd4, 0xf4, 0x78, 0xb6, 0x7b, 0xb7,
  0x83, 0xd1, 0x70, 0xbc, 0xc0, 0x33, 0xa1, 0xd0, 0xb2, 0x32, 0x88, 0x16,
  0x77, 0x88, 0xc8, 0x05, 0x17, 0x38, 0x14, 0x4d, 0x72, 0x7c, 0x57, 0x5d,
  0x03, 0xd4, 0x0b, 0x99, 0x1a, 0x4b, 0xf7, 0x3a, 0x5b, 0xc7, 0xcf, 0x71,
  0x1f, 0xcf, 0x84, 0x62, 0xa4, 0xf0, 0x78, 0x42, 0xda, 0xb7, 0xb7, 0x3f,
  0x10, 0x93, 0x88, 0x3e, 0x05, 0xd2, 0x88, 0xcb, 0x4d, 0x8d, 0xa5, 0xfb,
  0xf6, 0x3a, 0x1b, 0x0c, 0xc7, 0x75, 0xbc, 0x7b, 0xf4, 0xaa, 0x28, 0xb7,
  0x36, 0x5e, 0x96, 0x3d, 0x77, 0x42, 0x51, 0x86, 0x0e, 0x03, 0x58, 0xf2,
  0x5d, 0x3a, 0x63, 0x1f, 0x7f, 0xf4, 0xaa, 0x6b, 0x78, 0x77, 0x47, 0xb1,
  0x68, 0x50, 0x67, 0xd4, 0xcf, 0x72, 0x28, 0x12, 0xf3, 0x90, 0x26, 0x4d,
  0x41, 0xfa, 0x5c, 0x98, 0x74, 0x9c, 0x51, 0x15, 0x01, 0xab, 0xaa, 0x74,
  0x21, 0x22, 0x8e, 0x5b, 0x78, 0x27, 0x14, 0xc1, 0xab, 0x95, 0x6b, 0x87,
  0x74, 0xa9, 0x39, 0xcb, 0x22, 0x56, 0x52, 0xe2, 0x70, 0x24, 0x1c, 0x37,
  0xf1, 0xee, 0xd1, 0xcb, 0x6f, 0xd1, 0xc5, 0x24, 0xb5, 0xec, 0x77, 0xdb,
  0x21, 0x3d, 0x7a, 0x02, 0x21, 0x13, 0x2f, 0xf5, 0xc5, 0xc7, 0x9d, 0x0f,
  0x86, 0xe3, 0x1a, 0x9e, 0x09, 0xc5, 0xea, 0xa1, 0xa1, 0x50, 0x7e, 0xc2,
  0xa1, 0x48, 0xac, 0x41, 0x08, 0x01, 0xe9, 0xdb, 0x37, 0xe9, 0x38, 0xbd,
  0x24, 0xfd, 0x4b, 0x99, 0x39, 0xe6, 0xf1, 0x4e, 0x28, 0xd9, 0xe6, 0x73,
  0xa8, 0x00, 0x00, 0xcc, 0x48, 0x9b, 0x92, 0x5b, 0xa9, 0xb7, 0x89, 0x6d,
  0xea, 0x92, 0xf4, 0x88, 0x95, 0x63, 0x0f, 0x9e, 0xb5, 0x7d, 0x10, 0xeb,
  0xd7, 0x07, 0x82, 0x41, 0x4b, 0xa6, 0x76, 0xf4, 0xd0, 0x61, 0x90, 0x86,
  0x8d, 0x1c, 0x8c, 0xca, 0x1c, 0x52, 0xd7, 0xf3, 0x10, 0xa3, 0x3a, 0x40,
  0xe2, 0x7f, 0x7d, 0x46, 0xc4, 0x7b, 0xb3, 0xbe, 0x74, 0x82, 0x69, 0x1a,
  0x8c, 0xf2, 0x72, 0x20, 0x16, 0x85, 0x11, 0x8d, 0x81, 0x69, 0x2a, 0x04,
  0x49, 0x82, 0x20, 0xcb, 0x10, 0x14, 0x1f, 0x84, 0x86, 0x8d, 0xd2, 0xda,
  0x81, 0xd3, 0xd3, 0xfe, 0x28, 0xa4, 0x75, 0x4b, 0xd0, 0x9d, 0x45, 0xa6,
  0xc7, 0xb3, 0xed, 0x5b, 0x81, 0xee, 0xdd, 0x1d, 0x8c, 0xc8, 0x1c, 0x62,
  0xbd, 0x7a, 0x10, 0x5a, 0xe7, 0xc0, 0x38, 0x7a, 0x38, 0xee, 0x18, 0x23,
  0x5c, 0xe5, 0x62, 0x44, 0xe9, 0x03, 0x53, 0xd5, 0x1f, 0x7a, 0xd3, 0xec,
  0xd9, 0x03, 0x1c, 0x3b, 0x04, 0xed, 0x78, 0x31, 0xc4, 0xb2, 0x72, 0x20,
  0x49, 0x8d, 0xa0, 0x11, 0xf4, 0x41, 0x68, 0xd4, 0x14, 0x72, 0x6e, 0x2e,
  0x84, 0xce, 0x79, 0x90, 0xba, 0x76, 0x05, 0x69, 0xd6, 0xdc, 0xa5, 0xc8,
  0x13, 0xe3, 0xa9, 0x50, 0x84, 0x36, 0xed, 0x00, 0x0b, 0x42, 0xd1, 0xb7,
  0x6f, 0x71, 0x30, 0x1a, 0x6b, 0x90, 0x8e, 0xb9, 0xd0, 0x13, 0x09, 0xe5,
  0x1c, 0xba, 0xa3, 0xe8, 0x07, 0xf6, 0x43, 0x2f, 0xd8, 0x08, 0xba, 0x69,
  0x23, 0xd8, 0xf6, 0x2d, 0x00, 0xfb, 0xf1, 0x96, 0xa6, 0xd9, 0xe7, 0x7b,
  0x21, 0x1c, 0x03, 0xc2, 0x07, 0xa1, 0x1d, 0x3c, 0x08, 0x2c, 0x59, 0x02,
  0x15, 0x80, 0x50, 0xbf, 0x3e, 0x48, 0xe7, 0xae, 0x10, 0xbb, 0x75, 0x83,
  0x7c, 0xd1, 0xc5, 0x9e, 0x59, 0xd9, 0x7a, 0x2a, 0x14, 0xa9, 0x4b, 0x1e,
  0xf4, 0x6f, 0xbe, 0x36, 0x3d, 0xde, 0xd8, 0xb9, 0x0b, 0xb4, 0xac, 0x0c,
  0xc4, 0xea, 0xfb, 0x8d, 0x13, 0xb4, 0x4c, 0xfc, 0x97, 0xce, 0xa8, 0xac,
  0xdb, 0x77, 0x14, 0x7a, 0xfc, 0x7b, 0xa8, 0xcb, 0xbe, 0x03, 0x5d, 0xf1,
  0x1d, 0x8c, 0xa3, 0xa7, 0x67, 0x59, 0xd8, 0xbb, 0xef, 0x6f, 0x94, 0x97,
  0x43, 0x5f, 0x9b, 0x0f, 0xac, 0xcd, 0x47, 0xe4, 0x1f, 0x6f, 0xc2, 0x37,
  0xf8, 0x12, 0xc8, 0xc3, 0x47, 0x40, 0x72, 0x39, 0x4b, 0xc3, 0x53, 0xa1,
  0x88, 0x5d, 0xac, 0x55, 0x10, 0x82, 0x31, 0xe8, 0x2b, 0xbe, 0x03, 0xb9,
  0xea, 0x5a, 0x67, 0x02, 0xb2, 0x80, 0xd8, 0xa2, 0x65, 0xe2, 0x01, 0x76,
  0x35, 0x35, 0x4a, 0x33, 0xb4, 0x35, 0xf9, 0x88, 0x7d, 0xf1, 0x29, 0x8c,
  0xc2, 0xc2, 0x84, 0xef, 0x68, 0x4e, 0x40, 0x74, 0x0a, 0x7d, 0xf1, 0xd7,
  0xd0, 0x17, 0x7f, 0x0d, 0xb1, 0x53, 0x2e, 0x94, 0x11, 0x57, 0x42, 0x1e,
  0x74, 0xb1, 0x2b, 0x6b, 0x7b, 0xfb, 0x8e, 0xd2, 0xa4, 0x09, 0xc4, 0xe6,
  0xcd, 0xc1, 0x8e, 0x99, 0xcf, 0xfb, 0x52, 0xbf, 0x5d, 0x0a, 0x5f, 0x1a,
  0x08, 0x85, 0x24, 0x13, 0x4a, 0xa6, 0x9e, 0xa8, 0xd6, 0x00, 0x8d, 0x46,
  0xa1, 0x7d, 0xbb, 0x18, 0xda, 0xa2, 0x4f, 0x7f, 0xe8, 0x4b, 0xe3, 0xb2,
  0x48, 0xce, 0x84, 0xed, 0x2a, 0x42, 0x74, 0xd7, 0x5f, 0x11, 0xfd, 0x72,
  0x11, 0x02, 0xbf, 0xbd, 0x0b, 0x52, 0x4e, 0x3b, 0x47, 0xd7, 0xf3, 0xbc,
  0x66, 0x9e, 0x5c, 0x7e, 0x85, 0xb5, 0x0b, 0x0e, 0x1e, 0x84, 0x56, 0x58,
  0xe0, 0x4c, 0x30, 0x16, 0x10, 0x9a, 0x35, 0x07, 0x84, 0x04, 0x62, 0xf0,
  0xfc, 0x9b, 0xad, 0x3d, 0x8c, 0x32, 0xa8, 0x8b, 0xbf, 0x42, 0xe5, 0x23,
  0x0f, 0x42, 0x9b, 0xff, 0xa6, 0xab, 0xcd, 0x9b, 0x4c, 0x53, 0x54, 0x84,
  0xc8, 0xe4, 0x49, 0x88, 0xbc, 0xf3, 0x16, 0x68, 0x24, 0xe2, 0xd8, 0x32,
  0x9e, 0xff, 0x38, 0x95, 0x21, 0x97, 0x80, 0x05, 0xac, 0xbd, 0xa0, 0xa9,
  0xef, 0xfd, 0xcb, 0xa1, 0x68, 0xcc, 0x43, 0xfc, 0x7e, 0x18, 0xd9, 0x0d,
  0xe3, 0x7e, 0x2e, 0xa4, 0xea, 0x51, 0x96, 0x26, 0x68, 0x6b, 0xf2, 0x11,
  0x9e, 0xf8, 0x10, 0x62, 0xf3, 0x5e, 0x85, 0x78, 0xb2, 0xcc, 0xeb, 0x70,
  0x12, 0xc3, 0x18, 0xf4, 0x85, 0x9f, 0xa0, 0x6a, 0xe2, 0x04, 0xc7, 0xfe,
  0x88, 0x7a, 0xfe, 0xd3, 0x14, 0xfd, 0x01, 0xc8, 0xc3, 0x2e, 0xb1, 0x74,
  0x0d, 0x2b, 0xda, 0x05, 0x75, 0xf3, 0x26, 0x87, 0x22, 0x32, 0x8f, 0xd8,
  0xbc, 0x49, 0xdc, 0xcf, 0x98, 0x98, 0x99, 0x8f, 0x5e, 0xb4, 0xb8, 0x18,
  0xe1, 0x39, 0xb3, 0x11, 0x7d, 0xfe, 0xb9, 0x33, 0x5e, 0xd2, 0xd3, 0x1f,
  0xa1, 0xb4, 0x18, 0xd1, 0x19, 0xcf, 0x40, 0x5b, 0x62, 0x7e, 0x83, 0xc8,
  0x2c, 0x9e, 0x0b, 0x05, 0x00, 0x7c, 0x23, 0xae, 0x30, 0x95, 0xbe, 0x7e,
  0x3a, 0xb1, 0xd7, 0x5e, 0xf3, 0xdc, 0x1a, 0x88, 0x04, 0xe3, 0x37, 0x12,
  0xca, 0x34, 0x9d, 0x50, 0x4a, 0x11, 0x5d, 0xf8, 0x31, 0x2a, 0x1e, 0x79,
  0x38, 0xed, 0x1a, 0x37, 0x59, 0x42, 0x10, 0x11, 0x7d, 0xf5, 0x15, 0x44,
  0x3e, 0xf8, 0xb7, 0xad, 0xd3, 0xa6, 0x85, 0x50, 0x48, 0xd3, 0x66, 0x20,
  0x03, 0x2f, 0xb2, 0x76, 0xd1, 0xf1, 0x63, 0xd0, 0x3e, 0xfe, 0xc0, 0x91,
  0x78, 0xcc, 0x62, 0x64, 0xc5, 0x17, 0x4a, 0xa2, 0xd7, 0x97, 0x74, 0x83,
  0x55, 0x94, 0x23, 0xfa, 0xec, 0x74, 0x68, 0xef, 0xbc, 0x0d, 0xa2, 0xab,
  0x5e, 0x87, 0x63, 0x0b, 0xfa, 0xfb, 0xef, 0x21, 0x32, 0xef, 0x15, 0x30,
  0x6a, 0xcf, 0xee, 0x63, 0x5a, 0x08, 0x05, 0x00, 0x94, 0x5f, 0xdf, 0x0e,
  0xd4, 0xb3, 0x96, 0x28, 0xa9, 0x7d, 0xf2, 0x3e, 0x74, 0x0f, 0xcb, 0x6e,
  0x85, 0x04, 0x77, 0x14, 0x26, 0x3a, 0x6f, 0xa7, 0x64, 0x07, 0xda, 0xce,
  0x9d, 0xa8, 0x7c, 0x6c, 0x12, 0x58, 0x61, 0xfa, 0x1c, 0xe6, 0xda, 0x85,
  0xbe, 0xf8, 0x6b, 0xc4, 0x5e, 0x7e, 0xd1, 0x96, 0xb9, 0xd2, 0x46, 0x28,
  0x52, 0x83, 0x86, 0xf0, 0xdf, 0x71, 0xa7, 0xb5, 0x8b, 0x98, 0x80, 0xc8,
  0xf3, 0x73, 0xc1, 0xaa, 0xbc, 0x39, 0xdc, 0x13, 0xea, 0xc5, 0x2f, 0x26,
  0x13, 0xbd, 0xb7, 0x74, 0x4e, 0x4a, 0xf4, 0x8b, 0xcf, 0x10, 0x7d, 0x7a,
  0x32, 0x84, 0x13, 0x75, 0xb7, 0x76, 0x46, 0x5f, 0xb9, 0x1c, 0xb1, 0xcf,
  0x16, 0xd4, 0x7a, 0x9e, 0xb4, 0x11, 0x0a, 0x00, 0xc8, 0x17, 0xf6, 0x03,
  0x19, 0x3c, 0xd4, 0xda, 0x45, 0xc5, 0x25, 0x88, 0xfd, 0xed, 0x7f, 0x9d,
  0x09, 0x28, 0x09, 0x62, 0x82, 0xba, 0x14, 0x43, 0x4a, 0xdf, 0x04, 0x3f,
  0x16, 0x8d, 0x20, 0xfc, 0xd7, 0x17, 0xaa, 0xb7, 0x7c, 0x6d, 0x3e, 0x49,
  0x4f, 0x47, 0xd4, 0x77, 0xde, 0x86, 0xba, 0x7d, 0x5b, 0xad, 0xe6, 0x48,
  0x2b, 0xa1, 0x00, 0x80, 0xef, 0xd6, 0xdb, 0x21, 0x74, 0xb0, 0x76, 0x78,
  0xa4, 0xaf, 0x5f, 0x87, 0xc8, 0xfc, 0x37, 0x1c, 0x8a, 0x28, 0x3e, 0x46,
  0x20, 0x10, 0xf7, 0x33, 0xd1, 0xe2, 0x96, 0xb7, 0x5b, 0xd0, 0x92, 0x12,
  0x44, 0x9e, 0x98, 0x04, 0xba, 0x6a, 0x85, 0xd7, 0xa1, 0xb8, 0x07, 0x63,
  0x88, 0xfd, 0x79, 0x0e, 0xf4, 0xd2, 0xd4, 0x4b, 0x1f, 0xd2, 0x4e, 0x28,
  0x24, 0x10, 0x40, 0xe0, 0x81, 0x47, 0x80, 0x26, 0x8d, 0x2d, 0x5d, 0xa7,
  0x7f, 0xb1, 0x08, 0x91, 0x0f, 0x3f, 0x70, 0x26, 0xa8, 0x38, 0x08, 0x52,
  0x82, 0x34, 0xfb, 0x50, 0x7c, 0x11, 0x79, 0x05, 0x3d, 0xfe, 0x3d, 0xc2,
  0x53, 0xa7, 0xa4, 0xd4, 0xff, 0x25, 0xe3, 0xa9, 0xac, 0x42, 0xf4, 0xc5,
  0x17, 0x52, 0xbe, 0x3c, 0xed, 0x84, 0x02, 0x54, 0x7b, 0xfe, 0x06, 0x1f,
  0x9a, 0x00, 0xc1, 0xe2, 0x2f, 0x9b, 0xfe, 0xef, 0x77, 0x11, 0xfb, 0xe4,
  0x43, 0x87, 0xa2, 0x3a, 0x1b, 0x91, 0xc4, 0xff, 0xfa, 0x04, 0x5f, 0x7a,
  0x09, 0x85, 0x1e, 0x3d, 0x8a, 0xaa, 0xa7, 0x9f, 0x02, 0xce, 0xe1, 0xca,
  0x4b, 0x63, 0xc7, 0x76, 0x68, 0xeb, 0xad, 0x9b, 0xc2, 0x03, 0x1e, 0xe7,
  0x7a, 0x25, 0x82, 0xb4, 0x6c, 0x05, 0xff, 0xf8, 0x09, 0xa8, 0x9a, 0x35,
  0x03, 0xa2, 0x85, 0x94, 0x75, 0xf5, 0xdd, 0x7f, 0x82, 0x56, 0x56, 0x20,
  0x78, 0xf3, 0xad, 0x0e, 0x46, 0x57, 0x8d, 0x21, 0xc5, 0x6f, 0x39, 0x21,
  0x84, 0xd2, 0xe7, 0xd1, 0x8b, 0x1e, 0x3e, 0x84, 0xc8, 0xf4, 0x69, 0x10,
  0xca, 0x5c, 0x2c, 0xa7, 0xa6, 0x3a, 0x58, 0xe3, 0xc6, 0x20, 0x2d, 0x5a,
  0x42, 0xcc, 0x6e, 0x08, 0xa1, 0x7e, 0x7d, 0x40, 0x51, 0x60, 0xe8, 0x3a,
  0xa0, 0xaa, 0xd5, 0x3d, 0x33, 0xd5, 0x28, 0x70, 0xb2, 0x1c, 0xea, 0xee,
  0xdd, 0xae, 0x6d, 0x4b, 0x47, 0xdf, 0xfb, 0x27, 0xe4, 0x3e, 0xd6, 0x8d,
  0x14, 0xd3, 0x56, 0x28, 0x40, 0xb5, 0x41, 0x76, 0x68, 0xc2, 0xa3, 0x88,
  0xcc, 0x7c, 0x06, 0xb0, 0xb0, 0xb3, 0x45, 0x3f, 0xfd, 0x14, 0x55, 0xa5,
  0xa5, 0x08, 0xdc, 0x75, 0xb7, 0xb3, 0x55, 0x73, 0x89, 0xee, 0x28, 0xf5,
  0x1b, 0x38, 0xb7, 0xae, 0x05, 0xf4, 0x43, 0x07, 0x11, 0x79, 0x66, 0x0a,
  0xe0, 0x70, 0xda, 0xbf, 0xd1, 0xb8, 0x11, 0xa4, 0x4e, 0x5d, 0x21, 0x76,
  0xee, 0x04, 0xd2, 0xb1, 0x13, 0x48, 0xeb, 0xd6, 0x10, 0xfd, 0xe6, 0xee,
  0xaa, 0x7e, 0xca, 0xc0, 0x0e, 0xec, 0x83, 0xbe, 0x73, 0x3b, 0xd8, 0xc6,
  0x8d, 0xa0, 0x1b, 0xd6, 0x39, 0x97, 0x74, 0x79, 0xe0, 0x00, 0xb4, 0xd5,
  0xab, 0x20, 0xf7, 0x1f, 0x60, 0xe9, 0xb2, 0xb4, 0x68, 0x4d, 0x97, 0x0c,
  0x7a, 0xe4, 0x08, 0xaa, 0x66, 0x4c, 0xb3, 0xbe, 0x8d, 0xd9, 0xba, 0x15,
  0x82, 0xf7, 0x8e, 0x73, 0xac, 0x5d, 0x9c, 0xb6, 0x6d, 0x2b, 0xa2, 0xd3,
  0x9e, 0xae, 0xf1, 0x33, 0xdf, 0xbd, 0xf7, 0x43, 0xe9, 0xd7, 0xdf, 0x91,
  0x75, 0xcd, 0xa2, 0x1f, 0x3c, 0x88, 0xc8, 0xb4, 0xa9, 0x40, 0xa5, 0x45,
  0xb3, 0x41, 0x33, 0x88, 0x06, 0xc4, 0xbc, 0xee, 0x90, 0x7a, 0xf5, 0x82,
  0xd4, 0xab, 0x0f, 0x48, 0xcb, 0x56, 0xb6, 0x4d, 0xad, 0x1f, 0x38, 0x00,
  0x6d, 0xe1, 0x47, 0xd0, 0x57, 0xae, 0x74, 0xa4, 0x5c, 0x41, 0x68, 0xd1,
  0x0a, 0x81, 0x67, 0xa6, 0x5b, 0x6a, 0x1d, 0x92, 0x11, 0x42, 0x01, 0xaa,
  0x73, 0x90, 0xa2, 0x33, 0x9f, 0xb1, 0x94, 0x92, 0x0f, 0x00, 0x54, 0x22,
  0x08, 0xde, 0x31, 0x0a, 0x8a, 0xd5, 0x6d, 0x67, 0x13, 0x24, 0x12, 0x8a,
  0x7f, 0xe2, 0x63, 0x90, 0xbb, 0xe6, 0xd9, 0xbe, 0xa6, 0x59, 0x68, 0x59,
  0x19, 0xaa, 0x9e, 0x78, 0x1c, 0x42, 0xa9, 0xcd, 0xef, 0x24, 0xb9, 0xb9,
  0x50, 0x2e, 0x1e, 0x02, 0xa9, 0xff, 0x40, 0x90, 0x2c, 0x67, 0x4d, 0x09,
  0xf5, 0x83, 0x07, 0x11, 0x79, 0x6e, 0x0e, 0x70, 0xdc, 0xfe, 0x9c, 0x33,
  0xff, 0xd8, 0x71, 0x90, 0x2f, 0xec, 0x67, 0x7a, 0x7c, 0x5a, 0xbe, 0xcc,
  0xd7, 0x04, 0x69, 0xd2, 0x04, 0x81, 0xc9, 0x53, 0x40, 0x7a, 0xf6, 0xb2,
  0x76, 0x9d, 0x4e, 0x11, 0xfb, 0xdb, 0x4b, 0x08, 0xcf, 0x99, 0x5d, 0xab,
  0xed, 0xc1, 0x9a, 0x30, 0x12, 0xa4, 0x47, 0xb8, 0xd9, 0xc3, 0xe5, 0x4c,
  0x68, 0x34, 0x8a, 0xc8, 0xdc, 0x59, 0xf6, 0x89, 0x44, 0x14, 0x20, 0x0d,
  0xbf, 0x14, 0xc1, 0xe9, 0xb3, 0x91, 0xf5, 0xf8, 0x14, 0xf8, 0x46, 0x5c,
  0xee, 0xb8, 0x48, 0x00, 0x40, 0x6a, 0xd3, 0x06, 0xa1, 0x27, 0xad, 0xff,
  0xcc, 0xcd, 0xa0, 0xad, 0x58, 0x6e, 0x69, 0x7c, 0xc6, 0x08, 0x05, 0x00,
  0xc4, 0x50, 0x3d, 0xf8, 0xc6, 0x8d, 0x87, 0x7c, 0xb5, 0xf5, 0xc2, 0x2d,
  0xba, 0x71, 0x3d, 0xc2, 0x8f, 0x3e, 0x84, 0xd8, 0xb7, 0x4b, 0xed, 0x0b,
  0x28, 0xc1, 0xcd, 0x58, 0x68, 0x14, 0x3f, 0xb3, 0xd8, 0x69, 0x62, 0x7f,
  0x7b, 0x09, 0xc6, 0x9e, 0xda, 0xa7, 0xf6, 0x50, 0x45, 0x82, 0xf4, 0x93,
  0x1b, 0x10, 0x7c, 0xee, 0x2f, 0x08, 0xfc, 0xf6, 0x2e, 0x90, 0x96, 0x49,
  0x8a, 0xd5, 0x1c, 0xe0, 0xd4, 0xcf, 0xdc, 0x6a, 0x3f, 0xcd, 0x64, 0x68,
  0x1b, 0xd7, 0x5a, 0xaa, 0x5f, 0xc9, 0x28, 0xa1, 0x00, 0xd5, 0x06, 0x74,
  0xfe, 0x9b, 0x7f, 0x05, 0xe5, 0x7f, 0xee, 0x05, 0x95, 0xac, 0xe5, 0x53,
  0x09, 0xe1, 0x18, 0xd4, 0xff, 0x7b, 0x09, 0xe1, 0x67, 0x67, 0xd8, 0xe2,
  0x11, 0x26, 0xc4, 0xc9, 0x78, 0x36, 0x82, 0x01, 0xcf, 0xac, 0x77, 0xa2,
  0xef, 0xbe, 0x0d, 0xba, 0x66, 0x75, 0xad, 0xe7, 0x21, 0x03, 0x2e, 0x42,
  0xd6, 0xf4, 0x39, 0x08, 0xdc, 0x78, 0x93, 0xe7, 0x1e, 0x05, 0x84, 0x10,
  0x04, 0x7e, 0x3f, 0x06, 0x46, 0xd0, 0xbe, 0x2d, 0x77, 0x51, 0xa3, 0x60,
  0xbb, 0xcc, 0x77, 0xa3, 0xce, 0x38, 0xa1, 0x9c, 0xc2, 0x37, 0xf0, 0x22,
  0x64, 0x4d, 0x9d, 0x09, 0xb1, 0x53, 0xae, 0xe5, 0x6b, 0xe9, 0xa6, 0x4d,
  0xa8, 0x9c, 0xf0, 0x30, 0x62, 0x8b, 0xbf, 0xaa, 0x5d, 0x10, 0x6a, 0xcd,
  0x5b, 0x9a, 0x82, 0xc5, 0xc3, 0x52, 0xbb, 0x50, 0xbf, 0x5d, 0x0c, 0xed,
  0x93, 0x8f, 0x6b, 0x37, 0x49, 0xab, 0x96, 0xf0, 0x3f, 0xf2, 0x28, 0x82,
  0xf7, 0xdc, 0x0b, 0xd2, 0xd8, 0x9b, 0x7f, 0x47, 0x4d, 0x90, 0xc6, 0x8d,
  0xe1, 0xfb, 0xf9, 0xcd, 0xb6, 0xce, 0xa9, 0x6f, 0x33, 0x9f, 0xd6, 0x92,
  0xb1, 0x42, 0x01, 0x00, 0xd2, 0xa2, 0x05, 0xfc, 0x13, 0x27, 0x43, 0xfe,
  0xf9, 0x2f, 0x00, 0x58, 0xdb, 0x93, 0x10, 0xa3, 0x51, 0xa8, 0xf3, 0x5e,
  0x45, 0xd5, 0x94, 0xc9, 0xd0, 0x0f, 0x59, 0x6b, 0x91, 0x77, 0x0a, 0xa6,
  0xeb, 0x35, 0xc7, 0xd5, 0xc0, 0x7d, 0x93, 0x3e, 0x7d, 0xef, 0x5e, 0xc4,
  0x5e, 0x7f, 0x2d, 0xe5, 0xeb, 0xa9, 0xe2, 0x87, 0x7c, 0xf3, 0x2d, 0x08,
  0x4d, 0x99, 0x06, 0xf9, 0xfc, 0xf3, 0xed, 0x0b, 0xcc, 0x46, 0xa4, 0xfe,
  0x03, 0x00, 0xd1, 0xbe, 0xbd, 0x27, 0xb6, 0x6b, 0x97, 0xe9, 0xb1, 0x19,
  0x2d, 0x14, 0xe0, 0x3f, 0x8f, 0x62, 0xd7, 0xfd, 0x04, 0x81, 0x27, 0x9f,
  0x01, 0xda, 0x58, 0xdf, 0x06, 0x66, 0x45, 0xbb, 0x10, 0x99, 0xf8, 0x07,
  0x44, 0xde, 0xfd, 0x27, 0x68, 0x34, 0x6a, 0xe9, 0x5a, 0x31, 0x16, 0x67,
  0x7c, 0x53, 0x77, 0x4d, 0xdb, 0x58, 0x34, 0x82, 0xe8, 0x8b, 0x7f, 0xae,
  0x3e, 0xc4, 0x4b, 0x01, 0xd2, 0xa5, 0x33, 0xb2, 0x66, 0xce, 0x82, 0xff,
  0xea, 0x91, 0x10, 0xe5, 0xf8, 0x87, 0xa8, 0x5e, 0x43, 0xb2, 0xb2, 0x40,
  0x7a, 0xda, 0xd7, 0x75, 0x8d, 0x1e, 0x35, 0xdf, 0x1a, 0x31, 0xe3, 0x85,
  0x72, 0x0a, 0xa9, 0x7d, 0x7b, 0x04, 0x27, 0x4f, 0x85, 0x74, 0xcd, 0xc8,
  0x14, 0xaa, 0xa6, 0x04, 0xe8, 0x9f, 0x7c, 0x88, 0xf0, 0xa3, 0x7f, 0x80,
  0xb6, 0x26, 0xdf, 0xf4, 0x55, 0x46, 0x1c, 0xa1, 0x90, 0x66, 0x4d, 0x2d,
  0xae, 0x5f, 0x3b, 0xa2, 0x6f, 0xcc, 0x4b, 0xb9, 0x6c, 0x97, 0x5c, 0x7d,
  0x35, 0xfc, 0x13, 0x1e, 0x4f, 0x0b, 0xab, 0x5a, 0x33, 0x88, 0x6d, 0xda,
  0xd8, 0x36, 0x97, 0x50, 0x76, 0xc2, 0x74, 0x95, 0x6c, 0x9d, 0x11, 0x0a,
  0x00, 0x10, 0x45, 0x46, 0xe0, 0x97, 0xb7, 0xc0, 0x3f, 0xe1, 0x51, 0xa0,
  0x71, 0x0a, 0xbb, 0x4e, 0xc5, 0x25, 0x88, 0x3e, 0xff, 0x1c, 0xaa, 0x66,
  0x4e, 0x85, 0x7e, 0x30, 0xf9, 0xe3, 0x18, 0x0d, 0xd7, 0xbc, 0x6b, 0xe2,
  0xa6, 0x0d, 0xa8, 0xb6, 0xec, 0x3b, 0xd0, 0x65, 0xcb, 0x2c, 0x5f, 0x47,
  0x15, 0x3f, 0x94, 0x31, 0x63, 0x11, 0xbc, 0xf9, 0xd6, 0x84, 0x39, 0x6b,
  0xe9, 0x86, 0xd0, 0xd4, 0xc6, 0x3f, 0x42, 0x86, 0x01, 0x94, 0x9b, 0x33,
  0xce, 0xc8, 0x9c, 0x6f, 0xc8, 0x02, 0x72, 0xde, 0x79, 0x08, 0x3d, 0x3d,
  0x0d, 0xe4, 0x32, 0xeb, 0xb5, 0xf8, 0x00, 0xc0, 0x0a, 0xb7, 0x20, 0xf2,
  0xd8, 0x1f, 0x11, 0x7e, 0xf3, 0x75, 0xd0, 0xb2, 0xf8, 0x5f, 0xa4, 0x11,
  0xc7, 0x60, 0x5c, 0x48, 0xe6, 0xf9, 0x65, 0x13, 0xf4, 0xc8, 0x61, 0x54,
  0xbd, 0xfa, 0xb2, 0xe5, 0xeb, 0xc4, 0x96, 0x2d, 0x90, 0xf5, 0xe4, 0x14,
  0xf8, 0xfa, 0x0f, 0x74, 0x20, 0x2a, 0x67, 0x11, 0xb2, 0x6c, 0x3e, 0x9f,
  0x52, 0x63, 0xa6, 0x86, 0xd5, 0x49, 0xa1, 0x00, 0x80, 0x18, 0x0c, 0x22,
  0x78, 0xdb, 0x6f, 0x10, 0x78, 0x7a, 0x3a, 0x90, 0x6b, 0x7d, 0x67, 0x0c,
  0x8c, 0x81, 0x7e, 0xf9, 0x39, 0x2a, 0x1e, 0xba, 0x0f, 0xd1, 0xf7, 0xff,
  0x05, 0x16, 0xad, 0xe1, 0xee, 0x51, 0x53, 0xfb, 0x39, 0x83, 0x41, 0x70,
  0xa1, 0xd7, 0x24, 0xa5, 0x14, 0x91, 0x97, 0xfe, 0x0a, 0xa2, 0x5b, 0xfb,
  0x43, 0x20, 0xe4, 0xe5, 0x21, 0xf0, 0xf8, 0x53, 0x8e, 0xa5, 0xf5, 0x38,
  0x8d, 0x61, 0xb3, 0xa1, 0x88, 0x11, 0x67, 0xe7, 0xf2, 0x4c, 0xea, 0xac,
  0x50, 0x4e, 0x21, 0xb5, 0x6b, 0x8f, 0xac, 0xc7, 0xa7, 0xc0, 0x7f, 0xe7,
  0x28, 0xcb, 0x35, 0xf9, 0x00, 0x40, 0x54, 0x1d, 0xda, 0x07, 0xef, 0x23,
  0xfc, 0xe0, 0x58, 0x44, 0x3e, 0x7a, 0x1f, 0xec, 0xb4, 0xbb, 0x88, 0x50,
  0x55, 0xc3, 0x1d, 0xa5, 0x59, 0x4b, 0x57, 0x5e, 0x88, 0xf5, 0x2f, 0xbe,
  0xb0, 0x7c, 0xa8, 0x48, 0x7a, 0xf6, 0x42, 0xe0, 0x81, 0x87, 0x3d, 0x33,
  0xba, 0xb6, 0x03, 0x21, 0xc5, 0x0d, 0x8b, 0xb8, 0x88, 0xe6, 0x24, 0x90,
  0xd6, 0xd9, 0xc3, 0x76, 0x22, 0x5f, 0x32, 0x1c, 0xe4, 0xc2, 0x7e, 0x88,
  0x7d, 0xf2, 0x31, 0xf4, 0xcf, 0x3e, 0x3e, 0xcb, 0x71, 0x3d, 0x19, 0x46,
  0x55, 0x04, 0xfa, 0x7b, 0xff, 0x82, 0xba, 0x70, 0x21, 0x94, 0x4b, 0x86,
  0x41, 0x19, 0x71, 0x19, 0x58, 0x0d, 0xcf, 0xb7, 0x92, 0x8d, 0x2f, 0x9b,
  0xf1, 0xd0, 0x8f, 0x1d, 0x43, 0xe4, 0xdd, 0x77, 0x60, 0xe5, 0xb8, 0x95,
  0x5c, 0xd8, 0x1f, 0xfe, 0xbb, 0xef, 0x49, 0xeb, 0x5d, 0x2d, 0x33, 0xb0,
  0xe3, 0xdf, 0xdb, 0x3a, 0x9f, 0x10, 0x34, 0xd1, 0x66, 0x10, 0xe7, 0x90,
  0x50, 0x80, 0xea, 0x74, 0x88, 0xc0, 0x2f, 0x6f, 0x81, 0x3e, 0xec, 0x52,
  0xa8, 0xff, 0x7a, 0x1b, 0x74, 0xb5, 0xf5, 0x13, 0x6c, 0x31, 0x12, 0x86,
  0xfe, 0xd9, 0x42, 0xe8, 0x0b, 0x3e, 0xaa, 0xfe, 0x6b, 0x74, 0xa6, 0x23,
  0x64, 0x4e, 0x5b, 0x9b, 0xa2, 0x8d, 0x4f, 0xec, 0xd5, 0x57, 0x2c, 0xd5,
  0x6f, 0x90, 0xc1, 0x43, 0xe1, 0xbb, 0x73, 0x14, 0x44, 0x0b, 0xd9, 0xb2,
  0xe9, 0x8a, 0xbe, 0xa3, 0x76, 0xb5, 0xef, 0x67, 0x22, 0x04, 0xfc, 0xa6,
  0xc6, 0xd5, 0xf9, 0x47, 0xaf, 0x9a, 0x90, 0x9a, 0x37, 0x47, 0x70, 0xcc,
  0xfd, 0x08, 0x3c, 0xfe, 0x24, 0xc4, 0xf3, 0xbb, 0xa5, 0x36, 0x09, 0x91,
  0xce, 0x16, 0x09, 0x00, 0xa9, 0x4d, 0x4e, 0x2d, 0xa3, 0x4b, 0x8c, 0xb6,
  0xe4, 0x1b, 0xb0, 0x6d, 0x85, 0xa6, 0xc7, 0x4b, 0x03, 0x07, 0x21, 0xf8,
  0xbb, 0xd1, 0x96, 0x52, 0xca, 0xd3, 0x15, 0xa6, 0x69, 0xa0, 0x45, 0xe6,
  0xd3, 0x4e, 0x92, 0x61, 0x04, 0x7d, 0x10, 0x43, 0xf1, 0x2d, 0xa7, 0x4e,
  0xe7, 0x9c, 0x14, 0xca, 0x29, 0xa4, 0xdc, 0x4e, 0x08, 0x3d, 0x32, 0x11,
  0xbe, 0x3f, 0x4c, 0x84, 0x98, 0xdb, 0xc9, 0x96, 0x39, 0xb5, 0x2f, 0x3e,
  0x85, 0xbe, 0x6e, 0x0d, 0x28, 0xb5, 0xbf, 0x8d, 0x31, 0xab, 0xac, 0x44,
  0xf4, 0xed, 0x7f, 0x98, 0x1e, 0x2f, 0x9e, 0xdf, 0x0d, 0xbe, 0x51, 0xbf,
  0xb7, 0x3d, 0x0e, 0xaf, 0xa0, 0xeb, 0xd6, 0x42, 0xd4, 0xec, 0xfb, 0x5e,
  0x85, 0x96, 0xe6, 0x1f, 0x93, 0xcf, 0xa9, 0x47, 0xaf, 0x78, 0x28, 0xdd,
  0xba, 0x41, 0xe9, 0xf6, 0x24, 0xb4, 0xc2, 0x02, 0x68, 0xef, 0xbf, 0x6b,
  0xa9, 0x5d, 0xde, 0x99, 0xd0, 0x1d, 0x3b, 0x11, 0xd9, 0x31, 0x17, 0x46,
  0xc3, 0xc6, 0x90, 0x07, 0x0d, 0x82, 0x32, 0x74, 0x18, 0x48, 0x8b, 0x16,
  0xb6, 0xc4, 0x19, 0xfd, 0xd7, 0x3f, 0xcd, 0xf7, 0xbc, 0x6c, 0x97, 0x83,
  0xc0, 0xd8, 0x71, 0x19, 0xff, 0x4e, 0x72, 0x0a, 0x4a, 0x29, 0xa2, 0x0b,
  0xec, 0xf5, 0x43, 0x20, 0x2d, 0xcd, 0xef, 0xfc, 0x71, 0xa1, 0x9c, 0x86,
  0xdc, 0xad, 0x07, 0xe4, 0x6e, 0x3d, 0xa0, 0x6e, 0xde, 0x0c, 0xf5, 0xc3,
  0x7f, 0xc3, 0xd8, 0xb1, 0x3d, 0xe5, 0xb9, 0x84, 0x13, 0x25, 0xd0, 0x17,
  0x7c, 0x0c, 0x7d, 0xc1, 0xc7, 0x10, 0x3b, 0x74, 0x84, 0x34, 0xf0, 0x62,
  0x48, 0x03, 0xfa, 0xa7, 0x7c, 0x02, 0xae, 0x1f, 0x38, 0x00, 0xfa, 0xd5,
  0xe7, 0x80, 0x09, 0x07, 0x4a, 0xa3, 0x51, 0x13, 0x84, 0x1e, 0x7c, 0x24,
  0xa3, 0x77, 0xb7, 0xce, 0x44, 0xff, 0xe6, 0x4b, 0x60, 0xdf, 0x7e, 0x5b,
  0xe7, 0x94, 0xbb, 0x74, 0x31, 0x3d, 0x36, 0x63, 0x2a, 0x1c, 0xbd, 0x40,
  0xdf, 0xb9, 0x03, 0xea, 0x47, 0xef, 0x83, 0xae, 0xb7, 0xa9, 0x86, 0x5b,
  0x10, 0x20, 0xe6, 0x76, 0x04, 0xe9, 0xdb, 0x0f, 0x52, 0xdf, 0xfe, 0x90,
  0x9a, 0x9b, 0x3f, 0xc1, 0xaf, 0x9a, 0xf5, 0x0c, 0xd8, 0xe6, 0xe4, 0xef,
  0x26, 0x54, 0x52, 0x50, 0x6f, 0xf2, 0x13, 0x8e, 0x37, 0xd6, 0x71, 0x13,
  0x7d, 0xef, 0x1e, 0x44, 0x9e, 0x7c, 0x0c, 0x60, 0xf6, 0xfe, 0xaa, 0x06,
  0x66, 0xce, 0x31, 0xfd, 0x33, 0xe0, 0x42, 0x31, 0x81, 0x7e, 0xe0, 0x00,
  0xb4, 0x05, 0x1f, 0x43, 0x5f, 0xb5, 0xc2, 0xde, 0x1a, 0xee, 0x36, 0xad,
  0x21, 0xf7, 0xba, 0x00, 0x52, 0xef, 0x3e, 0x10, 0x72, 0x3b, 0xc5, 0x7d,
  0xe1, 0xd6, 0x0a, 0x0b, 0x10, 0x9d, 0x39, 0xdd, 0xd4, 0x94, 0xfe, 0x7b,
  0xc6, 0x42, 0x1e, 0x90, 0x79, 0x27, 0xee, 0xf1, 0xa8, 0x76, 0x90, 0x79,
  0x0a, 0x46, 0x59, 0x85, 0xbd, 0x13, 0x37, 0x6e, 0x82, 0xac, 0x39, 0x7f,
  0x32, 0x3d, 0x9c, 0x0b, 0xc5, 0x02, 0xb4, 0xa4, 0x04, 0xea, 0x97, 0x9f,
  0x43, 0xfd, 0xfa, 0x4b, 0x88, 0x16, 0x33, 0x8d, 0x93, 0x21, 0x84, 0x02,
  0x20, 0xbd, 0xfa, 0x40, 0xea, 0xd1, 0x1b, 0xa4, 0x47, 0x0f, 0x88, 0xa7,
  0xa5, 0x6a, 0x54, 0x4e, 0x7e, 0x14, 0xc6, 0xde, 0xbd, 0x49, 0xe7, 0x20,
  0x23, 0x2e, 0x43, 0xf0, 0xf6, 0x3b, 0x6c, 0x8d, 0xcb, 0x4b, 0xb4, 0x5d,
  0x3b, 0x11, 0x9d, 0x33, 0xcb, 0x92, 0x03, 0x8f, 0x59, 0xa4, 0x6b, 0x46,
  0x22, 0xf0, 0xcb, 0x5b, 0x4c, 0x8f, 0xe7, 0x42, 0x49, 0x01, 0x16, 0x8d,
  0xa0, 0x6a, 0xfc, 0xfd, 0xce, 0x59, 0x00, 0x09, 0x02, 0x84, 0x9c, 0x1c,
  0x48, 0xdd, 0x7b, 0x42, 0x08, 0x06, 0xa0, 0xbe, 0xfb, 0xcf, 0xe4, 0xd7,
  0xb4, 0x69, 0x8d, 0xd0, 0xe4, 0xa7, 0x21, 0x2a, 0xe9, 0xeb, 0x79, 0x6c,
  0x16, 0x4a, 0x29, 0xb4, 0x45, 0x9f, 0x41, 0x7b, 0xf7, 0x6d, 0xc7, 0x9a,
  0xc6, 0x06, 0x9e, 0x9c, 0x6a, 0xa9, 0xb3, 0x30, 0x7f, 0x99, 0x4f, 0x01,
  0x43, 0xd3, 0x81, 0xb2, 0x32, 0xe7, 0xbc, 0xa7, 0x0c, 0x03, 0xc6, 0xbe,
  0x7d, 0xd0, 0xf6, 0xed, 0x33, 0x7b, 0x01, 0x02, 0xa3, 0xc7, 0xd4, 0x09,
  0x91, 0xa8, 0x85, 0x85, 0x88, 0xbd, 0xfd, 0x06, 0xb0, 0x3f, 0xb5, 0x62,
  0x3a, 0x53, 0xb4, 0x6e, 0x65, 0xb9, 0xfd, 0x36, 0x17, 0x4a, 0x0a, 0xb0,
  0xdd, 0x45, 0x67, 0x8b, 0x84, 0xea, 0x20, 0x23, 0xaf, 0x03, 0x5b, 0xba,
  0x18, 0x46, 0x95, 0x73, 0x4d, 0x37, 0x6b, 0x42, 0xea, 0x73, 0x21, 0xc4,
  0x66, 0xce, 0x27, 0x62, 0x3a, 0x89, 0xbe, 0x6e, 0x0d, 0xd4, 0x4f, 0x3f,
  0x01, 0xdd, 0x61, 0xdf, 0x81, 0x62, 0x3c, 0x7c, 0x57, 0x5c, 0x65, 0xf9,
  0x1a, 0xfe, 0xe8, 0x95, 0x02, 0xd1, 0x0f, 0xdf, 0x87, 0xf6, 0xef, 0x33,
  0x1a, 0xae, 0x36, 0x6d, 0x8e, 0xac, 0xd9, 0x73, 0x40, 0x55, 0x0d, 0x2c,
  0x7f, 0x15, 0xb4, 0xc5, 0x5f, 0xba, 0xf2, 0x43, 0xff, 0x2f, 0xa2, 0x08,
  0xa1, 0x5d, 0x3b, 0x88, 0x5d, 0xf2, 0x20, 0x75, 0xee, 0x02, 0xd2, 0x31,
  0x37, 0xad, 0x6a, 0xde, 0x6b, 0x42, 0xdf, 0xbb, 0x07, 0xea, 0xf2, 0x65,
  0xd0, 0x56, 0x2d, 0x77, 0xaf, 0xa1, 0x6a, 0xfd, 0x10, 0x42, 0xcf, 0xbe,
  0x60, 0xf9, 0xee, 0xcb, 0xef, 0x28, 0x29, 0x40, 0x77, 0x6c, 0x3d, 0xeb,
  0xff, 0x89, 0x1d, 0xdb, 0x03, 0xa8, 0x2e, 0x1e, 0x23, 0x17, 0x0f, 0x86,
  0x7c, 0xf1, 0x60, 0xd0, 0x23, 0x87, 0xa1, 0x7d, 0xbb, 0x04, 0xda, 0x92,
  0x6f, 0x1c, 0xb7, 0x34, 0x05, 0x63, 0x30, 0xf6, 0xec, 0x01, 0xdd, 0xb3,
  0x07, 0x74, 0xd1, 0xa7, 0xd5, 0xff, 0xaf, 0x7e, 0x08, 0xa4, 0x5d, 0x2e,
  0xc4, 0x36, 0x6d, 0x41, 0x72, 0xda, 0x41, 0x68, 0xd3, 0x06, 0x42, 0xb3,
  0xe6, 0x20, 0x7e, 0x73, 0xf9, 0x4d, 0x76, 0x42, 0x29, 0x85, 0x71, 0xe4,
  0x08, 0x8c, 0xa2, 0x9d, 0x50, 0x0b, 0x0b, 0xc0, 0x0a, 0x37, 0xff, 0xf7,
  0x3b, 0x71, 0x33, 0x3d, 0x44, 0xba, 0xfc, 0xea, 0x94, 0x1e, 0x51, 0xf9,
  0x1d, 0xc5, 0x22, 0x94, 0x52, 0x54, 0xde, 0x7d, 0x17, 0xc4, 0x33, 0xea,
  0x22, 0x94, 0x5b, 0x7e, 0x05, 0xdf, 0x55, 0x35, 0xfb, 0x8d, 0x31, 0xca,
  0x40, 0x0b, 0x36, 0x42, 0xfb, 0x76, 0x69, 0x75, 0x23, 0x51, 0xbb, 0x53,
  0xc5, 0xad, 0x20, 0x08, 0x30, 0x1a, 0x35, 0x84, 0xd8, 0xb4, 0x29, 0x48,
  0xc3, 0x26, 0x40, 0xa3, 0x46, 0x20, 0x4d, 0x9b, 0x40, 0x68, 0xdc, 0x14,
  0x42, 0xc3, 0x86, 0x10, 0xb2, 0xea, 0x43, 0x08, 0x04, 0x53, 0xb2, 0x5b,
  0xa2, 0x65, 0x65, 0x30, 0x4e, 0x9e, 0x80, 0x71, 0xe2, 0x04, 0x8c, 0xd2,
  0x52, 0xb0, 0x13, 0xa5, 0x60, 0x27, 0x4b, 0xc1, 0xf6, 0xef, 0x07, 0x3d,
  0x74, 0xc0, 0xd6, 0xf4, 0x93, 0x54, 0x10, 0xb2, 0xb3, 0x10, 0x98, 0x31,
  0x17, 0x24, 0x41, 0x5f, 0x9b, 0x78, 0xf0, 0x3b, 0x8a, 0x45, 0x8c, 0x03,
  0x07, 0xce, 0x12, 0x09, 0x00, 0x88, 0x9d, 0xe2, 0x9f, 0xf2, 0x8a, 0x44,
  0x84, 0xd8, 0xbb, 0x0f, 0xe4, 0xde, 0x7d, 0xc0, 0xaa, 0xaa, 0xa0, 0xe5,
  0xaf, 0x04, 0x5d, 0xf6, 0x2d, 0xe8, 0xd6, 0xad, 0xce, 0x6d, 0x08, 0xc4,
  0xc3, 0x30, 0x20, 0x94, 0x94, 0xc2, 0x28, 0x29, 0x85, 0x8e, 0xea, 0xcc,
  0x83, 0x1a, 0xbd, 0x64, 0x44, 0x11, 0xf0, 0xfb, 0x81, 0x60, 0x00, 0x08,
  0x04, 0x41, 0xfc, 0x0a, 0x98, 0xce, 0x00, 0x6a, 0xc0, 0x30, 0x28, 0x60,
  0x30, 0x88, 0x94, 0x82, 0xe9, 0x06, 0x0c, 0x5d, 0x87, 0x70, 0xa2, 0x18,
  0x89, 0xba, 0x77, 0xa5, 0x43, 0x52, 0xa1, 0x72, 0xd3, 0xcd, 0x29, 0x89,
  0x04, 0xe0, 0x42, 0xb1, 0x0c, 0xad, 0x29, 0x73, 0x57, 0x96, 0x21, 0xe6,
  0xb4, 0x37, 0x75, 0xbd, 0x18, 0x0a, 0xc1, 0x37, 0x6c, 0x04, 0x30, 0x6c,
  0x04, 0x68, 0x71, 0x31, 0xb4, 0x15, 0xcb, 0xa1, 0xad, 0x58, 0x06, 0xa4,
  0x68, 0x99, 0xe4, 0x18, 0x8c, 0x55, 0xe7, 0x95, 0x85, 0xc3, 0x00, 0x4a,
  0x50, 0xd3, 0xbd, 0xe0, 0xd4, 0xc6, 0xad, 0x70, 0xda, 0x7f, 0xd3, 0x96,
  0xb6, 0x6d, 0xa1, 0x0c, 0x19, 0x96, 0xf2, 0xe5, 0x5c, 0x28, 0x16, 0x61,
  0x35, 0x98, 0xa6, 0x89, 0x39, 0xed, 0x40, 0x14, 0xeb, 0xc9, 0x87, 0xa4,
  0x49, 0x13, 0x90, 0xeb, 0xae, 0x87, 0xff, 0xba, 0xeb, 0xa1, 0x1f, 0x3c,
  0x08, 0x6d, 0xd5, 0x0a, 0xe8, 0x2b, 0xbe, 0x03, 0x8e, 0x9f, 0xbb, 0xcd,
  0x7e, 0x1c, 0x41, 0x14, 0x11, 0xb8, 0xab, 0x76, 0x59, 0xd4, 0x19, 0x29,
  0x14, 0xa6, 0x69, 0x30, 0x4e, 0x9e, 0x00, 0x2b, 0x29, 0x01, 0x3b, 0x71,
  0x02, 0x82, 0xae, 0x02, 0x1a, 0x85, 0xc1, 0x28, 0xa0, 0x6b, 0x30, 0x18,
  0x00, 0xaa, 0x03, 0x7e, 0x1f, 0x48, 0xb0, 0x1e, 0x10, 0x0a, 0x01, 0xf5,
  0xea, 0x55, 0x27, 0x09, 0x86, 0xea, 0xa5, 0x6c, 0x11, 0xca, 0x28, 0x83,
  0xba, 0x6d, 0xdb, 0x59, 0x8f, 0x11, 0xa4, 0x4b, 0xed, 0x7d, 0x71, 0xa5,
  0x36, 0x6d, 0x20, 0xb5, 0xb9, 0x09, 0x11, 0x55, 0x85, 0xfe, 0xd9, 0xc2,
  0x5a, 0xcf, 0xc7, 0xf9, 0x01, 0xe9, 0xba, 0xeb, 0x21, 0x75, 0xe8, 0x58,
  0xbb, 0x39, 0x6c, 0x8a, 0xc5, 0x51, 0x58, 0x45, 0x39, 0xf4, 0x0d, 0xeb,
  0xa0, 0xef, 0xd8, 0x0e, 0xba, 0x7b, 0x37, 0x70, 0xf8, 0xb0, 0xe9, 0x13,
  0xdb, 0x9a, 0x5f, 0x9b, 0x0d, 0xa0, 0x71, 0x53, 0x90, 0xc6, 0x4d, 0x80,
  0x66, 0xcd, 0x20, 0x34, 0x6f, 0x0e, 0xa9, 0x45, 0x4b, 0x08, 0x2d, 0x5b,
  0x42, 0x6c, 0x11, 0xbf, 0xe6, 0x9d, 0xee, 0xdc, 0x5e, 0x63, 0xf7, 0x2f,
  0x92, 0x77, 0x9e, 0xf9, 0x7f, 0x4c, 0x02, 0x58, 0x55, 0x25, 0x62, 0x5f,
  0x7f, 0x6d, 0xa9, 0xc4, 0x97, 0x93, 0x18, 0xa1, 0x43, 0x07, 0xf8, 0xae,
  0xbb, 0xa1, 0xd6, 0xf3, 0xa4, 0xb5, 0x50, 0xd4, 0xb5, 0xf9, 0x50, 0x3f,
  0xff, 0x14, 0xc6, 0x96, 0x2d, 0xa6, 0xd2, 0xcb, 0xcd, 0x23, 0x00, 0x25,
  0xc5, 0xa0, 0x25, 0xc5, 0xc0, 0x7f, 0x4a, 0x4b, 0xff, 0xfb, 0x42, 0x2b,
  0x8a, 0x40, 0xcb, 0x16, 0x10, 0x73, 0xda, 0x83, 0xe4, 0xe4, 0x40, 0x6c,
  0xd7, 0x11, 0x52, 0x6e, 0x47, 0x88, 0xfe, 0x00, 0xb4, 0x0d, 0x6b, 0xcf,
  0x9e, 0x4a, 0x14, 0x41, 0xf2, 0xec, 0xe9, 0x83, 0xa2, 0x2e, 0x59, 0x02,
  0xa2, 0xc6, 0xcf, 0x21, 0x13, 0x7b, 0x74, 0x87, 0xd4, 0xa7, 0x1f, 0xe8,
  0x8a, 0xa5, 0xa0, 0xdb, 0xb6, 0xbb, 0xbf, 0x11, 0x90, 0x61, 0x08, 0xa1,
  0x00, 0x02, 0x63, 0x1f, 0xb0, 0xa5, 0x26, 0x27, 0x2d, 0xbf, 0x69, 0x75,
  0xc3, 0x7a, 0x68, 0x6f, 0xcf, 0xff, 0xa1, 0x7b, 0xad, 0xad, 0x22, 0x49,
  0x02, 0x63, 0xc0, 0xa1, 0xc3, 0x60, 0x87, 0x0e, 0x83, 0xfd, 0xa7, 0x87,
  0x46, 0x8c, 0x51, 0xa0, 0x7d, 0x3b, 0x18, 0xc5, 0xc7, 0xcf, 0x7a, 0x65,
  0x15, 0xba, 0x74, 0x31, 0xdd, 0x82, 0x2d, 0xe1, 0xb2, 0x9a, 0x86, 0xd8,
  0xa2, 0x05, 0xf1, 0x77, 0x87, 0x44, 0x11, 0xfe, 0x5b, 0xef, 0xa8, 0x2e,
  0x02, 0x1b, 0x71, 0x19, 0xe8, 0xf7, 0xc7, 0xa0, 0x2e, 0x5f, 0x06, 0xb6,
  0xfc, 0x3b, 0xcb, 0xcd, 0x95, 0xce, 0x05, 0x98, 0x4c, 0x10, 0xbc, 0x7f,
  0xbc, 0x6d, 0x87, 0xae, 0x69, 0x25, 0x14, 0x56, 0x51, 0x8e, 0xe8, 0x1b,
  0xf3, 0x52, 0x32, 0x7d, 0x70, 0x14, 0x91, 0x00, 0xfb, 0x0f, 0xd6, 0xb8,
  0xaf, 0x23, 0x08, 0x02, 0xb4, 0xed, 0x5b, 0x41, 0x3a, 0x75, 0xad, 0x95,
  0xe3, 0x22, 0xcd, 0x5f, 0x9d, 0xf0, 0x74, 0x9a, 0x0c, 0xbf, 0xf4, 0x47,
  0x95, 0x92, 0xa4, 0x59, 0x73, 0x04, 0x6e, 0xb8, 0x11, 0xb8, 0xe1, 0xc6,
  0xea, 0x13, 0xee, 0x95, 0xcb, 0xc0, 0x96, 0xaf, 0x84, 0xe1, 0x66, 0x43,
  0xd3, 0x74, 0x45, 0x96, 0x11, 0x1c, 0x37, 0x1e, 0x72, 0x57, 0x7b, 0x1e,
  0x89, 0x81, 0x34, 0x3a, 0x70, 0x54, 0x0b, 0x0b, 0xa1, 0xbe, 0xf4, 0xbc,
  0xfd, 0x75, 0x07, 0x2e, 0xc1, 0xfc, 0x7e, 0xc8, 0x3d, 0x7b, 0x82, 0xf4,
  0xec, 0x03, 0xa9, 0x67, 0x2f, 0xcb, 0x1b, 0x06, 0x15, 0x8f, 0xff, 0x31,
  0x7e, 0x05, 0x9f, 0x2c, 0x23, 0x38, 0x6b, 0x8e, 0xa9, 0xea, 0x48, 0xb5,
  0xb0, 0x10, 0x74, 0xf5, 0x0a, 0xe8, 0xab, 0x57, 0x99, 0x2f, 0x1b, 0xae,
  0x4b, 0x88, 0x06, 0x7c, 0xf7, 0x3f, 0x0c, 0xa5, 0x77, 0x1f, 0x5b, 0xa7,
  0x4d, 0x0b, 0xa1, 0x68, 0xcb, 0x97, 0x21, 0xfa, 0xb7, 0xff, 0x75, 0x2c,
  0xa5, 0xda, 0x75, 0x04, 0x01, 0x62, 0xfb, 0x0e, 0x20, 0x7d, 0x2e, 0x80,
  0xd4, 0xa3, 0x27, 0xa4, 0x8e, 0x89, 0x9d, 0x2a, 0xb5, 0x2d, 0x5b, 0x10,
  0x9d, 0x31, 0x35, 0xee, 0xe7, 0xd2, 0xb0, 0xe1, 0x08, 0xdc, 0x31, 0xca,
  0x52, 0x08, 0x4c, 0xd3, 0x40, 0xb7, 0x6d, 0x85, 0xb6, 0x72, 0x05, 0xf4,
  0x75, 0xab, 0x20, 0x84, 0xcd, 0x59, 0x87, 0x66, 0x34, 0xa2, 0x88, 0xc0,
  0xd8, 0xfb, 0x21, 0x5d, 0x70, 0xa1, 0xed, 0x53, 0x7b, 0x2e, 0x94, 0xd8,
  0x57, 0x5f, 0x42, 0x7d, 0xf3, 0xb5, 0x84, 0x6d, 0xde, 0x32, 0x9e, 0xfa,
  0x21, 0x90, 0x1e, 0xbd, 0x21, 0xf7, 0xee, 0x0b, 0xd2, 0xad, 0xdb, 0x59,
  0x16, 0x39, 0xe1, 0xb9, 0xb3, 0x41, 0x37, 0xac, 0xaf, 0xf9, 0x5a, 0x46,
  0x11, 0x7c, 0xf6, 0x4f, 0xb5, 0x32, 0xfe, 0x66, 0x9a, 0x06, 0xba, 0x75,
  0x4b, 0x75, 0x46, 0xc0, 0x9a, 0x35, 0x75, 0xf2, 0x4e, 0x23, 0x64, 0x37,
  0x84, 0xef, 0x9e, 0x31, 0x90, 0x6d, 0xda, 0x81, 0x3c, 0x6b, 0x7e, 0x2f,
  0x85, 0x12, 0xfd, 0xf4, 0x13, 0x68, 0x6f, 0xbf, 0xe5, 0xd5, 0xf2, 0xde,
  0x60, 0x30, 0x90, 0xae, 0x5d, 0x21, 0xf6, 0xbc, 0x00, 0x52, 0xaf, 0x5e,
  0x10, 0x24, 0x09, 0xe1, 0x3f, 0x3c, 0x18, 0x77, 0x07, 0x4b, 0xea, 0xdb,
  0x0f, 0x81, 0xfb, 0xc6, 0xd9, 0xb6, 0x3c, 0xd3, 0x34, 0xd0, 0x1d, 0xdb,
  0xa0, 0xad, 0x59, 0x03, 0x7d, 0xfd, 0x7a, 0xeb, 0x2d, 0xc9, 0xd3, 0x10,
  0xd2, 0xa3, 0x27, 0xfc, 0xa3, 0xff, 0xe7, 0x47, 0x55, 0xa1, 0x76, 0xe3,
  0x99, 0x50, 0xb4, 0x8d, 0x1b, 0x10, 0x9d, 0x3b, 0x3b, 0xb5, 0x3b, 0x09,
  0xd5, 0x21, 0xb4, 0x6e, 0x0d, 0xd2, 0xb2, 0x15, 0x84, 0x56, 0xad, 0x41,
  0x9a, 0x37, 0x87, 0xd0, 0xaa, 0x0d, 0x84, 0x50, 0x08, 0x50, 0x14, 0x08,
  0x3e, 0x1f, 0x0c, 0x49, 0x06, 0x09, 0x04, 0xaa, 0xfb, 0x5f, 0xc4, 0xa2,
  0xd5, 0x6d, 0xe4, 0xd4, 0x18, 0x0c, 0x55, 0x85, 0x51, 0x5e, 0x0e, 0x76,
  0xf2, 0x24, 0x50, 0x76, 0x02, 0xec, 0x64, 0x59, 0x75, 0x12, 0x5f, 0x49,
  0x31, 0x8c, 0xef, 0x8f, 0xb8, 0x5e, 0x4b, 0x02, 0x59, 0x4e, 0x98, 0x24,
  0xe9, 0x9b, 0xf8, 0x18, 0x14, 0x07, 0xdb, 0x70, 0xeb, 0xbb, 0x77, 0x43,
  0x5f, 0xb3, 0x1a, 0x7a, 0xfe, 0x2a, 0x18, 0xdf, 0xdb, 0x6b, 0x57, 0xea,
  0x38, 0xa2, 0x08, 0xf9, 0xa6, 0x9b, 0xe1, 0xbf, 0xc6, 0x7a, 0xf3, 0x5b,
  0xab, 0x78, 0x22, 0x14, 0x5a, 0x7c, 0x1c, 0xe1, 0xc7, 0x26, 0x5a, 0x7f,
  0x04, 0xc8, 0xcd, 0x85, 0x6f, 0xe8, 0x25, 0x20, 0xbd, 0xfa, 0x38, 0xd6,
  0xf8, 0x86, 0x55, 0x55, 0x82, 0x1d, 0x3d, 0x0a, 0x76, 0xf8, 0x20, 0x68,
  0x51, 0x11, 0xf4, 0x6f, 0xbe, 0x76, 0x64, 0x1d, 0x53, 0xe4, 0xb4, 0x41,
  0xd6, 0x53, 0x33, 0x5c, 0x5b, 0x4e, 0xdf, 0xbb, 0x17, 0x5a, 0xfe, 0x6a,
  0xd0, 0x35, 0xf9, 0x30, 0x8e, 0x1e, 0x76, 0x6d, 0x5d, 0xcb, 0x50, 0x1d,
  0x64, 0xd0, 0x10, 0xf8, 0x6e, 0xfc, 0xb9, 0x6d, 0x9e, 0x69, 0xc9, 0xf0,
  0x64, 0x7b, 0x38, 0xf6, 0xd2, 0x5f, 0x2c, 0x89, 0x44, 0x6c, 0xde, 0x1c,
  0xbe, 0x51, 0xa3, 0x21, 0xd9, 0x90, 0x2a, 0x92, 0x74, 0xad, 0x50, 0xbd,
  0x6a, 0xd7, 0xc8, 0xdc, 0x4e, 0x50, 0x75, 0x3d, 0x4e, 0x66, 0xad, 0x01,
  0x26, 0x29, 0x35, 0x66, 0x11, 0xdb, 0x09, 0x69, 0xd9, 0x16, 0xac, 0xaa,
  0xd2, 0xb4, 0xed, 0x67, 0x6d, 0x91, 0xda, 0xb7, 0xaf, 0x2e, 0x91, 0xbd,
  0xe9, 0x17, 0xa0, 0x87, 0x0f, 0x41, 0x5b, 0xbb, 0x06, 0x74, 0xfd, 0x3a,
  0xb0, 0x9d, 0xdb, 0xdd, 0x3d, 0xcb, 0x4a, 0x00, 0xe9, 0xd1, 0x13, 0xca,
  0xcf, 0x7f, 0x69, 0xb9, 0x94, 0xb7, 0xb6, 0xb8, 0x7e, 0x47, 0x51, 0xd7,
  0xad, 0x45, 0xec, 0x4f, 0x73, 0x4c, 0x8f, 0x27, 0xc3, 0x47, 0xc0, 0x7f,
  0xcb, 0xad, 0x9e, 0xb4, 0xa3, 0xae, 0x9a, 0x30, 0xfe, 0x87, 0x43, 0xcf,
  0xd3, 0x90, 0xfa, 0xf6, 0x83, 0x32, 0x66, 0x2c, 0x8c, 0x03, 0xfb, 0xa1,
  0x6f, 0x2d, 0x04, 0xdb, 0xb6, 0x0d, 0xea, 0x96, 0xad, 0x09, 0x4f, 0xd5,
  0x53, 0x85, 0x4a, 0x0a, 0x94, 0x81, 0x03, 0xa0, 0x5c, 0x71, 0x15, 0xa4,
  0x76, 0xed, 0x6d, 0x9f, 0xdf, 0x0c, 0xac, 0xb2, 0x12, 0xda, 0xe6, 0x02,
  0x18, 0x5b, 0x0a, 0xa1, 0x6d, 0x29, 0x70, 0x3d, 0x69, 0x53, 0xc8, 0xce,
  0x82, 0x38, 0x68, 0x30, 0x94, 0x8b, 0x06, 0x7b, 0xf6, 0x1d, 0xb8, 0x2a,
  0x14, 0x4a, 0x29, 0xc2, 0x93, 0x1e, 0x01, 0x0e, 0x9b, 0x68, 0x32, 0x29,
  0x08, 0xf0, 0xdf, 0x3d, 0x06, 0xf2, 0xc0, 0x8b, 0x9c, 0x0f, 0xac, 0x06,
  0xd4, 0xcd, 0x9b, 0x10, 0x9b, 0x55, 0xf3, 0x63, 0x8f, 0x32, 0x6a, 0x34,
  0x7c, 0x43, 0x86, 0xfe, 0xe8, 0xff, 0x55, 0x1b, 0x48, 0xef, 0x82, 0x5e,
  0x50, 0x00, 0x7d, 0xd3, 0x5a, 0x47, 0xcc, 0x11, 0x48, 0x97, 0xce, 0x90,
  0xae, 0xba, 0x16, 0x4a, 0xdf, 0x7e, 0xb6, 0xcf, 0x6d, 0x05, 0x5a, 0x52,
  0x02, 0xb6, 0x7d, 0x1b, 0xf4, 0x3d, 0xbb, 0x41, 0xf7, 0xed, 0x86, 0x5e,
  0x54, 0x64, 0xb9, 0xa1, 0x51, 0x42, 0x04, 0x01, 0x42, 0xf3, 0x96, 0x90,
  0xba, 0x76, 0x05, 0x19, 0x30, 0x00, 0x62, 0xde, 0xf9, 0x9e, 0x9b, 0x8c,
  0xbb, 0x2a, 0x14, 0x35, 0x7f, 0x35, 0x62, 0x2f, 0x98, 0x33, 0x1d, 0x93,
  0x7e, 0x76, 0x13, 0x02, 0xd7, 0xdf, 0xe0, 0x6c, 0x40, 0x09, 0xa8, 0x9c,
  0x36, 0x05, 0xc6, 0xb6, 0x9a, 0x2c, 0x55, 0x0d, 0x04, 0x5f, 0x78, 0x09,
  0x24, 0x2b, 0x2b, 0xe1, 0xf5, 0xb4, 0xf8, 0x38, 0xb4, 0xf5, 0x6b, 0xa1,
  0xaf, 0x5e, 0x0d, 0x63, 0x9b, 0xcd, 0xb9, 0x6a, 0x4d, 0x9b, 0xc3, 0x77,
  0xcd, 0xb5, 0x90, 0x86, 0x0c, 0x4d, 0x0b, 0x6f, 0x61, 0x4a, 0x29, 0xf0,
  0xfd, 0xb1, 0xea, 0x77, 0xbb, 0x63, 0xdf, 0x83, 0x1d, 0x3d, 0x04, 0xa3,
  0xe4, 0x38, 0x58, 0x45, 0x39, 0x8c, 0xf2, 0x2a, 0xd0, 0x8a, 0xca, 0x1a,
  0xef, 0xb6, 0x46, 0x30, 0x00, 0xa1, 0x41, 0x03, 0x88, 0x0d, 0x1a, 0x41,
  0x6c, 0xd0, 0x08, 0x68, 0xd1, 0x02, 0x52, 0x6e, 0x2e, 0x48, 0x87, 0x0e,
  0xae, 0x3d, 0x6e, 0x9a, 0xc5, 0x55, 0xa1, 0x44, 0xfe, 0xfc, 0x1c, 0xf4,
  0xb5, 0xc9, 0xbb, 0xee, 0x92, 0x7e, 0xfd, 0x10, 0xbc, 0x77, 0x9c, 0xf3,
  0x01, 0xc5, 0x41, 0xdd, 0xbc, 0x19, 0xb1, 0x59, 0xd3, 0x6a, 0xfc, 0x8c,
  0xf4, 0xee, 0x83, 0xe0, 0x03, 0x0f, 0x59, 0x9a, 0x8f, 0x96, 0x95, 0x41,
  0xcf, 0x5f, 0x09, 0x6d, 0xf5, 0xca, 0xea, 0x04, 0x4f, 0x9b, 0x92, 0x19,
  0x8d, 0x86, 0x8d, 0xe1, 0x1b, 0x39, 0x12, 0xf2, 0xd0, 0x61, 0x69, 0x6f,
  0x55, 0x74, 0xca, 0xdd, 0xdf, 0xeb, 0x3b, 0x43, 0xaa, 0xb8, 0x26, 0x14,
  0x16, 0x0e, 0xa3, 0xea, 0xbe, 0x7b, 0x92, 0xd6, 0x8b, 0x53, 0x49, 0x41,
  0xfd, 0x3f, 0x3d, 0x0f, 0xb1, 0x9e, 0x77, 0x7f, 0x51, 0xc2, 0x4f, 0x3f,
  0x1e, 0xd7, 0xd1, 0x5e, 0xb9, 0x7b, 0x0c, 0x7c, 0x17, 0x0d, 0x4a, 0x79,
  0x6e, 0xfd, 0xd8, 0x31, 0xc4, 0xde, 0x7c, 0x15, 0xac, 0x60, 0x73, 0xca,
  0x73, 0x9c, 0x89, 0x90, 0x9d, 0x05, 0x65, 0xe4, 0x4f, 0x20, 0x0d, 0x1b,
  0x91, 0xf6, 0x82, 0xc9, 0x54, 0x5c, 0x2b, 0x65, 0xd6, 0xb7, 0x16, 0x9a,
  0x32, 0x55, 0xf0, 0x0d, 0x19, 0xec, 0xa9, 0x48, 0xd4, 0xfc, 0xd5, 0x71,
  0x45, 0x62, 0x04, 0x7d, 0x90, 0xfb, 0xd6, 0x2e, 0x3d, 0x42, 0x6a, 0xde,
  0x1c, 0xa8, 0xb4, 0xf7, 0x64, 0xdc, 0x28, 0xab, 0x40, 0xec, 0xef, 0xf3,
  0x51, 0xf9, 0xf0, 0x78, 0x68, 0xcb, 0xbe, 0xb3, 0x75, 0x6e, 0x4e, 0x35,
  0xae, 0x09, 0x85, 0x15, 0x99, 0xe8, 0x39, 0x42, 0x75, 0x28, 0x29, 0x98,
  0x93, 0xd9, 0x05, 0x8b, 0xa9, 0x88, 0xce, 0x7f, 0x33, 0xee, 0xe7, 0xd2,
  0xa0, 0x4b, 0x6a, 0xfd, 0x17, 0x5b, 0x3f, 0x76, 0x0c, 0x6c, 0xcf, 0xee,
  0x5a, 0xcd, 0x11, 0x0f, 0xe1, 0x64, 0x29, 0xa2, 0x2f, 0xbf, 0x88, 0x8a,
  0x49, 0x13, 0xa0, 0x15, 0x16, 0x38, 0xb2, 0xc6, 0xb9, 0x8a, 0x6b, 0x42,
  0xa1, 0x45, 0x26, 0x7e, 0x39, 0xda, 0xb6, 0xf5, 0xb4, 0xad, 0x73, 0xec,
  0xa3, 0x0f, 0x20, 0x9c, 0x2c, 0xad, 0xf9, 0x43, 0xaa, 0x43, 0x19, 0x3e,
  0xa2, 0xd6, 0x6b, 0xb0, 0x35, 0xab, 0x12, 0x0f, 0xa0, 0x3a, 0x84, 0xec,
  0x86, 0xb5, 0x5b, 0xe4, 0xc0, 0x01, 0x44, 0x67, 0x4e, 0x47, 0xf8, 0xd9,
  0xe9, 0xa0, 0x87, 0x0f, 0xd5, 0x6e, 0x2e, 0x0e, 0x00, 0x37, 0x85, 0x72,
  0x34, 0xf9, 0x96, 0xb0, 0xd4, 0xa2, 0xa5, 0x0b, 0x91, 0xd4, 0x8c, 0xbe,
  0x7b, 0x37, 0xf4, 0x85, 0x1f, 0xc7, 0xfd, 0x5c, 0xec, 0xde, 0xc3, 0x96,
  0x8e, 0xbf, 0xea, 0xea, 0x24, 0x42, 0xe9, 0xd0, 0x1e, 0xc1, 0x67, 0xe7,
  0xc2, 0x37, 0xea, 0x77, 0x40, 0xd3, 0xd4, 0x13, 0x21, 0x01, 0x80, 0x6e,
  0x2a, 0x40, 0xf8, 0xd1, 0x87, 0x11, 0x7d, 0xef, 0xdd, 0xea, 0x54, 0x1e,
  0x4e, 0xca, 0xb8, 0x22, 0x14, 0x4a, 0x29, 0x84, 0xf2, 0x93, 0x49, 0xc7,
  0x09, 0x16, 0x5a, 0x85, 0xd9, 0x09, 0x8b, 0xa9, 0x88, 0xbe, 0xf4, 0x42,
  0xc2, 0x34, 0x7f, 0xe5, 0xea, 0x91, 0xb5, 0x5e, 0x87, 0x96, 0x94, 0xc0,
  0x28, 0xda, 0x95, 0x70, 0x8c, 0xd4, 0xb5, 0x1b, 0x44, 0x59, 0x86, 0x32,
  0x64, 0x18, 0x82, 0x33, 0x66, 0x41, 0x19, 0x35, 0x1a, 0x68, 0xda, 0x24,
  0xf5, 0x45, 0x99, 0x00, 0xed, 0xa3, 0x0f, 0x10, 0x79, 0xec, 0x11, 0x68,
  0xdb, 0xcf, 0x76, 0xb8, 0xe4, 0x98, 0xc3, 0x9d, 0x3b, 0x4a, 0x45, 0x85,
  0xb9, 0x5a, 0x93, 0x2c, 0x6f, 0x5e, 0xe2, 0xa3, 0xf3, 0xe7, 0xc1, 0x38,
  0x9a, 0xa0, 0x9c, 0x36, 0x37, 0x17, 0x72, 0xaf, 0xde, 0xb5, 0x5e, 0x47,
  0x5b, 0x97, 0x9f, 0x74, 0x6b, 0x98, 0x9c, 0xf7, 0x43, 0x9a, 0x38, 0x21,
  0x04, 0xbe, 0x21, 0x43, 0x11, 0x9a, 0x31, 0x17, 0xfe, 0x3b, 0x47, 0xd5,
  0xea, 0x91, 0xcc, 0x38, 0x7a, 0x0c, 0xd1, 0xa7, 0x9e, 0x40, 0xf8, 0x95,
  0x97, 0x40, 0x2b, 0x32, 0xb3, 0x38, 0xce, 0x4b, 0xdc, 0x11, 0x4a, 0x0d,
  0xce, 0x25, 0x35, 0x61, 0x94, 0xc4, 0x79, 0x3f, 0x70, 0x90, 0xe8, 0x17,
  0x9f, 0x81, 0x2e, 0x5d, 0x9a, 0x70, 0x8c, 0xef, 0xc6, 0x9f, 0xdb, 0xb2,
  0x16, 0x5d, 0xb7, 0x2e, 0xe9, 0x18, 0x52, 0x83, 0xe3, 0xa4, 0x48, 0x44,
  0xc8, 0x97, 0x0c, 0x47, 0x70, 0xd6, 0x1c, 0x48, 0x3f, 0xbb, 0x09, 0x54,
  0x49, 0xd1, 0x3b, 0x98, 0x48, 0xa0, 0x4b, 0x97, 0xa2, 0x6a, 0xd2, 0x44,
  0x68, 0xbb, 0x5c, 0x34, 0x10, 0xaf, 0x03, 0xb8, 0x22, 0x14, 0xc3, 0x6c,
  0x77, 0xaa, 0x62, 0x77, 0xd3, 0xbc, 0xb5, 0x8d, 0x1b, 0xa0, 0xbd, 0xf9,
  0x7a, 0xc2, 0x31, 0xa4, 0x73, 0x2e, 0x94, 0xee, 0x3d, 0x6b, 0xbd, 0x16,
  0x0b, 0x87, 0xc1, 0xb6, 0x24, 0x39, 0x3b, 0x69, 0xda, 0x24, 0x61, 0x09,
  0xb1, 0xe8, 0x53, 0x10, 0xb8, 0xfe, 0x06, 0x64, 0xcd, 0x9e, 0x03, 0x69,
  0xd8, 0xa5, 0x80, 0x90, 0x9a, 0x3b, 0xa3, 0x70, 0xb2, 0x14, 0xd1, 0xa9,
  0x53, 0x10, 0x5d, 0xb8, 0x20, 0xa5, 0xeb, 0xcf, 0x45, 0xdc, 0xb9, 0xa3,
  0x48, 0xe6, 0x4e, 0xa2, 0xb5, 0x7d, 0x07, 0x1c, 0x0e, 0xe4, 0xb4, 0xb5,
  0xb6, 0x6d, 0x45, 0xf8, 0xf9, 0x39, 0x80, 0x90, 0xf8, 0x2b, 0x90, 0x6e,
  0xf8, 0x85, 0x2d, 0xeb, 0xd1, 0xcd, 0x05, 0x48, 0x66, 0x3b, 0x4a, 0x4c,
  0x9a, 0xb4, 0x91, 0xec, 0x6c, 0x04, 0xee, 0xb8, 0x0b, 0x81, 0xc7, 0x9e,
  0x80, 0xd0, 0x2e, 0xc5, 0xa6, 0xa6, 0x8c, 0x41, 0x7b, 0xe7, 0x1f, 0x08,
  0xcf, 0x9e, 0x01, 0x56, 0x51, 0x9e, 0xda, 0x1c, 0xe7, 0x10, 0xae, 0x08,
  0x45, 0xa8, 0x6f, 0xce, 0x68, 0x41, 0x28, 0x2d, 0x86, 0xb6, 0x26, 0x79,
  0x8a, 0x4b, 0x6d, 0x51, 0x0b, 0x0b, 0x51, 0xf5, 0xec, 0xec, 0xa4, 0xee,
  0xea, 0xa4, 0x4b, 0x1e, 0x94, 0xee, 0xdd, 0x6d, 0x59, 0x53, 0xdb, 0xb8,
  0x21, 0xe9, 0x18, 0x62, 0x31, 0x33, 0x56, 0xca, 0xed, 0x84, 0xc0, 0xe4,
  0xa7, 0xa0, 0xdc, 0xf6, 0x1b, 0xb0, 0x40, 0x6a, 0xad, 0xb2, 0x69, 0xc1,
  0x26, 0x84, 0x1f, 0x9d, 0x08, 0x7d, 0xb7, 0x33, 0x67, 0x3b, 0x75, 0x05,
  0x77, 0x84, 0x52, 0x2f, 0x0b, 0xd5, 0x3e, 0xa7, 0xc9, 0xd1, 0x3e, 0x8b,
  0xbf, 0x45, 0x6b, 0x07, 0xb1, 0x95, 0x2b, 0x10, 0x9b, 0x3d, 0x35, 0x79,
  0x4a, 0x3c, 0xa3, 0x50, 0x7e, 0x7d, 0x9b, 0x6d, 0xeb, 0xb2, 0x82, 0x38,
  0x35, 0xf1, 0xa7, 0x21, 0xb4, 0xef, 0x60, 0x79, 0x5e, 0x42, 0x08, 0x7c,
  0x97, 0x5d, 0x81, 0x7a, 0x53, 0xa7, 0x43, 0x3c, 0xbf, 0x5b, 0x2a, 0xa1,
  0xc1, 0x28, 0x3b, 0x81, 0xca, 0x69, 0x53, 0xa1, 0x16, 0x26, 0x6f, 0xcf,
  0x7d, 0xae, 0xe2, 0x8a, 0x50, 0x44, 0x22, 0x42, 0xec, 0xd8, 0xc9, 0xd4,
  0x58, 0xba, 0xb3, 0x08, 0xea, 0xe2, 0xaf, 0x6c, 0x8f, 0x81, 0x69, 0x1a,
  0xc2, 0xff, 0x98, 0x0f, 0xf5, 0x85, 0xe7, 0x00, 0x96, 0xfc, 0xd9, 0x5e,
  0xba, 0xf2, 0x1a, 0xdb, 0x8a, 0x83, 0xf4, 0xfd, 0xfb, 0x4c, 0xd9, 0x30,
  0x91, 0x5a, 0x9c, 0x23, 0x91, 0xc6, 0x8d, 0x11, 0x7a, 0x64, 0x22, 0x94,
  0xdb, 0x7e, 0x03, 0x2a, 0x59, 0xcf, 0x1e, 0x20, 0x6a, 0x14, 0xb1, 0xb9,
  0xb3, 0xa0, 0xad, 0x4f, 0xbe, 0xe1, 0x70, 0x2e, 0xe2, 0xda, 0x81, 0x23,
  0xb1, 0xf0, 0xd7, 0x2e, 0xf6, 0xda, 0x3c, 0xc4, 0xfe, 0xe3, 0xd2, 0x68,
  0x07, 0xfa, 0xde, 0xbd, 0x08, 0x4f, 0x79, 0xa2, 0xba, 0x13, 0x95, 0x89,
  0xcc, 0x5d, 0x21, 0xbb, 0xa1, 0x6d, 0x3b, 0x5d, 0x00, 0xa0, 0x6f, 0x4e,
  0x9e, 0x00, 0x49, 0x25, 0x02, 0xd2, 0xa4, 0x69, 0xad, 0xd7, 0xf2, 0x5d,
  0x76, 0x05, 0xb2, 0xa6, 0x4e, 0x83, 0xd0, 0x21, 0x85, 0x77, 0x17, 0x4d,
  0x43, 0x74, 0xee, 0x2c, 0x68, 0xcb, 0x97, 0xd5, 0x3a, 0x8e, 0xba, 0x86,
  0x7b, 0x42, 0xe9, 0x66, 0xe1, 0xb1, 0xc0, 0x30, 0xa0, 0xbe, 0xfc, 0x22,
  0x62, 0x5f, 0x7e, 0x0e, 0x56, 0x8b, 0xee, 0x54, 0xf4, 0x44, 0x29, 0xc2,
  0x6f, 0xcc, 0x43, 0xe4, 0xb1, 0x09, 0x30, 0xf6, 0xef, 0x35, 0x79, 0x91,
  0x0e, 0xdf, 0xef, 0x47, 0x57, 0x3b, 0xdf, 0xdb, 0x04, 0xdd, 0xb2, 0x29,
  0xe9, 0x18, 0xd2, 0xda, 0xbe, 0xc3, 0x56, 0xd2, 0xa2, 0x05, 0x82, 0x13,
  0x9f, 0x00, 0x19, 0x3a, 0x34, 0xf9, 0xe0, 0x33, 0x11, 0x44, 0x44, 0x5f,
  0x7e, 0xd1, 0x91, 0xbb, 0x7a, 0x26, 0xe3, 0x5a, 0xcd, 0x3c, 0xe9, 0x92,
  0x07, 0xa3, 0x41, 0xa3, 0xf8, 0xb9, 0x54, 0x67, 0xc2, 0x18, 0xd4, 0x37,
  0x5f, 0x47, 0x6c, 0xc1, 0x02, 0x04, 0x6e, 0xb8, 0x01, 0x64, 0xd0, 0x60,
  0xd3, 0x45, 0x4a, 0xea, 0xf6, 0x6d, 0xd0, 0x97, 0x2e, 0x01, 0x5d, 0xbe,
  0xa4, 0xfa, 0x31, 0xcb, 0x42, 0xd1, 0x94, 0x74, 0xf5, 0x48, 0xc8, 0xdd,
  0x7b, 0x98, 0x1e, 0x9f, 0x0c, 0xa6, 0x69, 0xd0, 0xb6, 0xee, 0x48, 0xea,
  0x50, 0x2f, 0x35, 0xb2, 0xb7, 0x31, 0xa9, 0xa8, 0x28, 0x08, 0xde, 0x35,
  0x1a, 0xb1, 0xf6, 0x1d, 0xa1, 0xbe, 0x31, 0x0f, 0x96, 0x1a, 0xfd, 0x18,
  0x06, 0x62, 0xaf, 0xbf, 0x06, 0xa1, 0x45, 0x2b, 0xc7, 0x7c, 0xb2, 0x32,
  0x0d, 0x57, 0x0b, 0xb7, 0x62, 0x9f, 0x7d, 0x06, 0xf5, 0xad, 0xf8, 0xd9,
  0xb9, 0x89, 0x10, 0x42, 0x01, 0x08, 0x1d, 0x73, 0x41, 0x72, 0x3a, 0x80,
  0xb4, 0xef, 0x00, 0xa1, 0x49, 0x53, 0x18, 0x6a, 0x0c, 0x50, 0x55, 0xb0,
  0x68, 0x04, 0xc6, 0x89, 0x13, 0xa0, 0x7b, 0x76, 0xc3, 0xd8, 0xb2, 0x35,
  0x75, 0xff, 0xdd, 0x76, 0x39, 0x08, 0x4d, 0x7a, 0xd2, 0xd6, 0x9a, 0x0e,
  0x6d, 0xdb, 0x56, 0x44, 0xa7, 0x3d, 0x9d, 0x74, 0x9c, 0x34, 0xfc, 0x52,
  0x04, 0x7e, 0x7b, 0x97, 0x6d, 0xeb, 0x9e, 0x8e, 0xbe, 0x63, 0x3b, 0x22,
  0x73, 0x67, 0x5b, 0x77, 0xbd, 0xa9, 0x1f, 0x42, 0xf0, 0x89, 0x69, 0x69,
  0xdf, 0x5d, 0xd8, 0x0d, 0x5c, 0x15, 0x0a, 0x0b, 0x87, 0x51, 0xf1, 0xc0,
  0x58, 0x88, 0x66, 0x0f, 0x20, 0xdd, 0xa4, 0x5e, 0x08, 0xc1, 0x29, 0xf6,
  0xff, 0x52, 0x44, 0x3e, 0xf8, 0x37, 0xf4, 0xf7, 0xdf, 0x4b, 0x3a, 0x4e,
  0xfa, 0xe9, 0xcf, 0xaa, 0x4d, 0xb7, 0x1d, 0x42, 0xdf, 0xbf, 0x0f, 0x91,
  0xe9, 0x53, 0x81, 0x2a, 0x6b, 0xdd, 0x89, 0xc5, 0x1e, 0xdd, 0x11, 0x7a,
  0xe8, 0x8f, 0x0e, 0x45, 0x95, 0x39, 0xb8, 0xda, 0x83, 0x52, 0x0c, 0x06,
  0xa1, 0x5c, 0x7b, 0x9d, 0x9b, 0x4b, 0x9a, 0x43, 0x96, 0xe1, 0x1f, 0xf7,
  0xb0, 0x23, 0x7f, 0x39, 0x59, 0x0d, 0xad, 0xb6, 0x6b, 0x82, 0x98, 0x3c,
  0x6b, 0x4a, 0x15, 0x29, 0xa7, 0x1d, 0x82, 0x93, 0x26, 0x43, 0xc8, 0x4e,
  0x5c, 0xeb, 0x7f, 0x26, 0xac, 0x60, 0x33, 0xf4, 0x75, 0x6b, 0x1c, 0x8a,
  0x2a, 0x73, 0x70, 0xbd, 0x59, 0xab, 0xef, 0xda, 0xeb, 0x41, 0x3a, 0x27,
  0x36, 0xad, 0x76, 0x17, 0xa3, 0xda, 0xed, 0xa5, 0x73, 0x67, 0xdb, 0x67,
  0xa6, 0x94, 0x42, 0xdb, 0x69, 0xee, 0x20, 0x4f, 0xf0, 0xf9, 0x6c, 0x5f,
  0xff, 0x4c, 0x48, 0xab, 0xd6, 0x08, 0x4c, 0x7c, 0xc2, 0xb2, 0x58, 0x22,
  0x7f, 0x7f, 0xe3, 0x9c, 0x4f, 0xd3, 0x77, 0x5d, 0x28, 0x22, 0x11, 0xe1,
  0x1b, 0x7d, 0x6f, 0xca, 0x27, 0xc9, 0xf6, 0x62, 0xc0, 0x3f, 0xf6, 0x01,
  0xc8, 0x17, 0x3a, 0x63, 0xff, 0x63, 0x1c, 0xd8, 0x6f, 0xde, 0xeb, 0xcb,
  0x25, 0xd3, 0x05, 0xd2, 0xa2, 0x05, 0x7c, 0xf7, 0x8d, 0x07, 0x60, 0xe1,
  0x89, 0xbb, 0xb8, 0x04, 0x74, 0xd5, 0xb9, 0xbd, 0x65, 0xec, 0x49, 0xfb,
  0x6f, 0xd2, 0xb4, 0x19, 0x82, 0x77, 0xdc, 0x55, 0xdd, 0x90, 0xd4, 0x23,
  0x98, 0x4c, 0xe0, 0xbb, 0x7f, 0xbc, 0x63, 0x22, 0x01, 0x00, 0x63, 0xdf,
  0x5e, 0xf3, 0x63, 0x5d, 0x34, 0x85, 0x90, 0x3b, 0x75, 0x86, 0x7c, 0xeb,
  0xed, 0x96, 0xae, 0x89, 0x7d, 0xb1, 0xc8, 0xa1, 0x68, 0x32, 0x03, 0x4f,
  0x84, 0x02, 0x00, 0xf2, 0x80, 0x81, 0x50, 0xee, 0x18, 0xe5, 0x8d, 0x58,
  0x1a, 0x37, 0x41, 0x68, 0xd2, 0x14, 0x28, 0x17, 0xf4, 0x75, 0x74, 0x19,
  0xdd, 0x4a, 0xcb, 0x38, 0x93, 0x29, 0x3e, 0x76, 0xe1, 0xbf, 0xfc, 0x2a,
  0x90, 0x01, 0x16, 0xcc, 0x05, 0xf7, 0xed, 0x87, 0xb6, 0xfd, 0xec, 0xd6,
  0xe1, 0xe7, 0x0a, 0x9e, 0x09, 0x05, 0x00, 0x7c, 0x23, 0x2e, 0x87, 0xff,
  0x9e, 0xfb, 0xc0, 0x64, 0xf7, 0xbc, 0x9e, 0x48, 0xcf, 0x1e, 0x08, 0x4d,
  0x99, 0xea, 0x8a, 0x77, 0x2d, 0x2b, 0xb5, 0xd0, 0x52, 0xc1, 0x83, 0x0c,
  0x5e, 0xdf, 0x6d, 0xbf, 0x01, 0x53, 0xcc, 0x1b, 0xe8, 0x69, 0x36, 0x66,
  0x4b, 0x64, 0x1a, 0x9e, 0x0a, 0x05, 0x00, 0xe4, 0x41, 0x17, 0x23, 0xf4,
  0xf8, 0x53, 0x40, 0xeb, 0x56, 0x8e, 0xae, 0x23, 0x64, 0x67, 0x41, 0xb9,
  0x7b, 0x0c, 0x82, 0xe3, 0x27, 0xb8, 0x66, 0x87, 0x24, 0x14, 0x9b, 0xbf,
  0xa3, 0x18, 0x95, 0x95, 0x0e, 0x46, 0x52, 0x33, 0x24, 0x2b, 0x0b, 0xbe,
  0xab, 0xcc, 0xb7, 0x4c, 0xd0, 0x37, 0x25, 0x4f, 0xec, 0xac, 0xab, 0x78,
  0x2e, 0x14, 0xa0, 0x7a, 0xeb, 0x32, 0xf4, 0xd4, 0x0c, 0xf8, 0x7e, 0x7d,
  0x2b, 0x8c, 0x60, 0xed, 0x3b, 0xec, 0x9e, 0x8e, 0x11, 0x0c, 0x40, 0x1e,
  0x79, 0x1d, 0x82, 0xd3, 0xe7, 0xd4, 0xca, 0xb8, 0x2e, 0x15, 0x98, 0x85,
  0x7e, 0x23, 0xac, 0xca, 0x9b, 0x2e, 0x58, 0xca, 0x55, 0xd7, 0x98, 0xde,
  0x58, 0x11, 0x4a, 0x4a, 0xa1, 0x1f, 0x88, 0xd3, 0x67, 0xb2, 0x8e, 0x93,
  0x36, 0x5d, 0x81, 0x45, 0x22, 0x42, 0xb9, 0xe2, 0x6a, 0x48, 0x97, 0x8c,
  0x80, 0xbe, 0xe2, 0x5b, 0xa8, 0x8b, 0xbf, 0x82, 0xb1, 0xab, 0x28, 0x35,
  0xfb, 0x51, 0xaa, 0x03, 0x5d, 0xba, 0xc2, 0x77, 0xe9, 0x65, 0x90, 0xfa,
  0x0f, 0xf4, 0xc4, 0x3d, 0x91, 0x52, 0x0a, 0xa3, 0xf4, 0x84, 0xe9, 0xf8,
  0x8d, 0x83, 0xde, 0xfc, 0x02, 0x8a, 0xa1, 0x10, 0x7c, 0x97, 0x5e, 0x0a,
  0x6d, 0xc1, 0x27, 0xa6, 0xc6, 0xeb, 0xdb, 0xb6, 0x40, 0x6a, 0x9b, 0xe3,
  0x70, 0x54, 0xe9, 0x47, 0xda, 0x08, 0xe5, 0x14, 0xa2, 0x4f, 0x81, 0x32,
  0x6c, 0x04, 0x94, 0x61, 0x23, 0x40, 0xcb, 0xca, 0xc0, 0x36, 0x17, 0x40,
  0x2b, 0xda, 0x09, 0xe3, 0xd8, 0x91, 0x6a, 0x13, 0xe8, 0xf2, 0x72, 0x88,
  0xba, 0x0e, 0xe8, 0x3a, 0x20, 0x89, 0x60, 0xf5, 0x1b, 0x40, 0xcc, 0xce,
  0x06, 0xa9, 0xdf, 0x00, 0x42, 0x4e, 0x3b, 0x90, 0x2e, 0x5d, 0x41, 0x72,
  0x3b, 0x25, 0x35, 0xd1, 0x76, 0x1a, 0x81, 0x31, 0x4b, 0x22, 0x67, 0x7b,
  0xf7, 0x3a, 0x17, 0x4c, 0x12, 0xc4, 0x6e, 0x3d, 0x00, 0x93, 0x42, 0x01,
  0xbf, 0xa3, 0xa4, 0x1f, 0x24, 0x3b, 0x1b, 0xe4, 0xe2, 0xc1, 0x90, 0x2f,
  0x1e, 0xec, 0x75, 0x28, 0x96, 0xb1, 0x9a, 0x18, 0x64, 0x94, 0x97, 0x83,
  0x9e, 0x3c, 0x09, 0xd2, 0xa0, 0x81, 0x23, 0xf1, 0x24, 0x42, 0xea, 0xdc,
  0x05, 0xb1, 0x24, 0x2d, 0xf2, 0x4e, 0xc1, 0x0e, 0xdb, 0xdf, 0xce, 0x22,
  0x13, 0x48, 0x8b, 0x77, 0x94, 0xba, 0x48, 0x2a, 0xbe, 0x0f, 0x7a, 0x41,
  0xf2, 0x74, 0x7c, 0x27, 0x10, 0x15, 0x05, 0xa4, 0x83, 0xb9, 0x6c, 0x09,
  0xfd, 0x10, 0x17, 0x0a, 0xc7, 0x46, 0x44, 0x59, 0xb6, 0xb4, 0xf5, 0x0a,
  0x00, 0x74, 0xb5, 0x77, 0xdb, 0xaf, 0x42, 0x3d, 0x93, 0x2f, 0xf4, 0x15,
  0x55, 0xff, 0x6d, 0xe1, 0x70, 0x2e, 0xc1, 0x85, 0xe2, 0x20, 0x62, 0x96,
  0xb5, 0x44, 0x47, 0xba, 0x71, 0x23, 0x68, 0x59, 0x99, 0x43, 0xd1, 0x24,
  0xc1, 0x30, 0x79, 0x0b, 0x24, 0x12, 0x84, 0x74, 0xcc, 0xfe, 0x76, 0x18,
  0x2e, 0x14, 0x07, 0x11, 0xad, 0xbe, 0x6f, 0x08, 0x22, 0xd4, 0xcf, 0xbd,
  0x4a, 0x15, 0x31, 0xff, 0x52, 0x65, 0x44, 0x5c, 0x6e, 0x31, 0x9e, 0x06,
  0x70, 0xa1, 0x38, 0x08, 0x69, 0x63, 0xbd, 0xbc, 0x57, 0x5f, 0xf8, 0x11,
  0xe8, 0x71, 0xf7, 0xfb, 0xbd, 0x6b, 0xfb, 0x2c, 0xec, 0x66, 0xb9, 0x9c,
  0x6e, 0x93, 0x0e, 0x70, 0xa1, 0x38, 0x88, 0x90, 0x4a, 0x0b, 0x0b, 0x66,
  0x40, 0x7d, 0xeb, 0x1f, 0xf6, 0x07, 0x93, 0x00, 0x7d, 0xff, 0x3e, 0x08,
  0xa5, 0xe6, 0x3b, 0xfd, 0x0a, 0xc1, 0x90, 0x83, 0xd1, 0xa4, 0x27, 0x5c,
  0x28, 0x0e, 0x22, 0x98, 0xdc, 0x49, 0x3a, 0x13, 0x7d, 0x6d, 0x3e, 0x22,
  0xef, 0xbd, 0x6b, 0x73, 0x34, 0xf1, 0xd1, 0xf2, 0x57, 0x9b, 0x1f, 0x2c,
  0x08, 0x10, 0x43, 0x5c, 0x28, 0x1c, 0x1b, 0x91, 0x3a, 0xe6, 0x82, 0x2a,
  0xa9, 0x1d, 0x55, 0xe9, 0x1f, 0x7d, 0x00, 0xf5, 0x9b, 0x2f, 0x6d, 0x8e,
  0xa8, 0x86, 0x75, 0x0e, 0xec, 0x87, 0xfe, 0xc9, 0x87, 0xe6, 0x2f, 0x08,
  0xd8, 0x9b, 0x62, 0x94, 0x29, 0x70, 0xa1, 0x38, 0x88, 0x28, 0xcb, 0x50,
  0xf2, 0x52, 0x73, 0x6f, 0x04, 0xaa, 0xfd, 0xcd, 0x22, 0xaf, 0xbd, 0x02,
  0x16, 0x53, 0x6d, 0x8c, 0xea, 0x07, 0x68, 0x34, 0x8a, 0xc8, 0x8b, 0xcf,
  0x03, 0xcc, 0xfc, 0x8b, 0x7c, 0x2a, 0xef, 0x5d, 0x75, 0x01, 0x2e, 0x14,
  0x87, 0x91, 0x2e, 0xb8, 0xa0, 0x56, 0xd7, 0xeb, 0xdf, 0x7c, 0x8d, 0xc8,
  0xe4, 0x3f, 0xda, 0x6e, 0x77, 0xaa, 0x1f, 0x3b, 0x86, 0xe8, 0xcc, 0x69,
  0xc0, 0xa1, 0xc3, 0x96, 0xae, 0x13, 0xda, 0x99, 0x33, 0x12, 0xaf, 0x6b,
  0xb8, 0xea, 0xc2, 0x72, 0x2e, 0xc2, 0xaa, 0x2a, 0x51, 0x71, 0xff, 0x3d,
  0x49, 0x0d, 0xc1, 0x4d, 0xd1, 0x2e, 0x07, 0xca, 0xe5, 0x57, 0x43, 0x1e,
  0x78, 0x91, 0x69, 0x8f, 0xb3, 0x33, 0xa1, 0x94, 0x82, 0x7d, 0xb7, 0x04,
  0x55, 0xf3, 0xff, 0x6e, 0xbe, 0x4c, 0xf9, 0x34, 0x7c, 0xbf, 0x1b, 0x0d,
  0x65, 0x70, 0x0a, 0xc6, 0x7a, 0x19, 0x0e, 0x17, 0x8a, 0x0b, 0x44, 0x5e,
  0xfc, 0x0b, 0xf4, 0x95, 0xf6, 0x9d, 0xba, 0x53, 0x49, 0x81, 0xdc, 0x39,
  0x17, 0xa4, 0x6b, 0x1e, 0x48, 0xd7, 0xf3, 0x21, 0xb4, 0x6a, 0x09, 0x21,
  0xab, 0x3e, 0x48, 0x9c, 0xba, 0x7b, 0xa6, 0x69, 0xa0, 0x5b, 0x0a, 0xa1,
  0xaf, 0x5b, 0x0b, 0x7d, 0xdd, 0x2a, 0xa0, 0xdc, 0x9a, 0x65, 0xd1, 0x0f,
  0x0b, 0xeb, 0x08, 0xfe, 0xe9, 0xaf, 0xe7, 0xa4, 0xcf, 0x17, 0x17, 0x8a,
  0x0b, 0xe8, 0x7b, 0xf7, 0x20, 0x32, 0x69, 0x42, 0x6a, 0x25, 0x03, 0x66,
  0x31, 0x18, 0x84, 0xec, 0x06, 0x30, 0xb2, 0xb3, 0x21, 0x04, 0x82, 0x30,
  0x62, 0x11, 0xa0, 0x32, 0x0c, 0x23, 0x52, 0x01, 0x21, 0xa2, 0x5a, 0xcf,
  0xd2, 0xac, 0x01, 0xd2, 0x39, 0x17, 0xc1, 0x49, 0x53, 0x6c, 0x08, 0x36,
  0xf3, 0x48, 0xeb, 0xec, 0xe1, 0xba, 0x82, 0xd4, 0xbe, 0x03, 0xa4, 0x7e,
  0xfd, 0xa1, 0x9b, 0x68, 0x4d, 0x97, 0x32, 0x82, 0x08, 0xa3, 0xbc, 0x1c,
  0x28, 0x2f, 0xff, 0xd1, 0x19, 0x7b, 0x6a, 0x3d, 0xb9, 0x6a, 0x46, 0xea,
  0x6f, 0xa1, 0xc6, 0xbe, 0x8e, 0xc1, 0x5f, 0xe6, 0x5d, 0x42, 0xbe, 0xf1,
  0x26, 0x80, 0x65, 0x6e, 0x32, 0x21, 0x93, 0x09, 0xc8, 0x00, 0x77, 0x2b,
  0x44, 0xd3, 0x09, 0x2e, 0x14, 0x97, 0x90, 0xda, 0xe6, 0x40, 0xbe, 0xf6,
  0x7a, 0xaf, 0xc3, 0x48, 0x19, 0x65, 0xc4, 0x95, 0x09, 0xfb, 0x4b, 0xd6,
  0x75, 0xb8, 0x50, 0x5c, 0x44, 0xbe, 0xf1, 0x26, 0x20, 0x03, 0xcf, 0x21,
  0xa8, 0x22, 0xc1, 0x37, 0x32, 0x0d, 0xad, 0x70, 0x5d, 0x84, 0x0b, 0xc5,
  0x45, 0x88, 0x22, 0x23, 0x30, 0x7a, 0x4c, 0xca, 0xa7, 0xf5, 0x5e, 0xe1,
  0xbf, 0xfe, 0x46, 0x88, 0x59, 0xf5, 0xbd, 0x0e, 0xc3, 0x53, 0xb8, 0x50,
  0x5c, 0x46, 0xca, 0x69, 0x87, 0xd0, 0x7d, 0xe3, 0x01, 0x31, 0x33, 0xbe,
  0x7a, 0x21, 0x2f, 0x0f, 0xf2, 0x35, 0x23, 0xbd, 0x0e, 0xc3, 0x73, 0x32,
  0xe3, 0xa7, 0x55, 0xc7, 0x90, 0x7b, 0xf4, 0x84, 0x72, 0xe7, 0xef, 0x3c,
  0xb5, 0x94, 0x35, 0x45, 0xbd, 0xfa, 0xf0, 0x8f, 0x1e, 0x13, 0xf7, 0x7c,
  0xe6, 0x5c, 0x82, 0x0b, 0xc5, 0x23, 0x7c, 0x43, 0x86, 0x42, 0xb9, 0xef,
  0x01, 0x57, 0x5d, 0x32, 0xad, 0x40, 0x15, 0x3f, 0x02, 0xe3, 0x1e, 0x80,
  0xd4, 0xa8, 0x91, 0xd7, 0xa1, 0xa4, 0x05, 0xfc, 0xc0, 0xd1, 0x63, 0xb4,
  0xa2, 0x5d, 0x88, 0xce, 0x99, 0x09, 0x54, 0xa6, 0x78, 0x5a, 0xee, 0x00,
  0x46, 0xd0, 0x87, 0xe0, 0xc3, 0x93, 0x20, 0x75, 0x3c, 0x37, 0xf3, 0xba,
  0x6a, 0x82, 0x0b, 0x25, 0x0d, 0xa0, 0x27, 0x4f, 0x22, 0xf6, 0xe6, 0xeb,
  0xa0, 0x6b, 0x2c, 0xd4, 0x85, 0x38, 0x84, 0xd1, 0xb0, 0x31, 0x82, 0x0f,
  0x8e, 0x87, 0x94, 0x93, 0x42, 0x57, 0xe1, 0x3a, 0x0c, 0x17, 0x4a, 0x1a,
  0xa1, 0xad, 0x5f, 0x87, 0xc8, 0xeb, 0xaf, 0x41, 0x38, 0x61, 0xc1, 0xdc,
  0xdb, 0x46, 0xc8, 0xe0, 0x21, 0xf0, 0xff, 0xea, 0x56, 0x88, 0x21, 0x77,
  0xbc, 0x99, 0x33, 0x09, 0x2e, 0x94, 0x34, 0x83, 0xa9, 0x2a, 0xf4, 0x65,
  0x4b, 0x11, 0x5b, 0xb0, 0x10, 0x38, 0x6e, 0xa1, 0x6d, 0x44, 0x6d, 0x68,
  0xda, 0x04, 0xfe, 0xdb, 0xee, 0x80, 0xdc, 0xab, 0xb7, 0x3b, 0xeb, 0x65,
  0x20, 0x5c, 0x28, 0x69, 0x0a, 0xa5, 0x14, 0x74, 0xdd, 0x5a, 0xe8, 0xdf,
  0x2e, 0x05, 0x2d, 0xd8, 0x60, 0xa9, 0xb8, 0xca, 0x2c, 0x42, 0x5e, 0x57,
  0x28, 0x57, 0x5e, 0x0b, 0xd2, 0xab, 0x37, 0xdf, 0xd9, 0x4a, 0x02, 0x17,
  0x4a, 0x06, 0x40, 0x23, 0x11, 0xd0, 0x2d, 0x9b, 0xa1, 0xaf, 0xcd, 0x07,
  0xdd, 0xb1, 0x0b, 0x28, 0xfe, 0x3e, 0xb5, 0x6c, 0x60, 0xd1, 0x00, 0xe9,
  0xd4, 0x05, 0x62, 0x5e, 0x37, 0x48, 0x7d, 0xfb, 0xb9, 0xd2, 0x23, 0xa6,
  0xae, 0xc0, 0x85, 0x92, 0x81, 0xd0, 0x48, 0x04, 0xc6, 0xe1, 0x43, 0x60,
  0xfb, 0xf6, 0x41, 0x3f, 0x7a, 0x04, 0xa8, 0xaa, 0x82, 0x50, 0x55, 0x01,
  0x1a, 0xae, 0x82, 0x51, 0x59, 0x09, 0x91, 0x31, 0x20, 0xbb, 0x31, 0xc4,
  0x06, 0xd9, 0x30, 0xb2, 0xb3, 0x21, 0x36, 0x6c, 0x00, 0xb1, 0x6d, 0x7b,
  0x90, 0x4e, 0x9d, 0x40, 0xfc, 0x7e, 0xaf, 0xc3, 0xcf, 0x48, 0xb8, 0x50,
  0x38, 0x1c, 0x13, 0xf0, 0x03, 0x47, 0x0e, 0xc7, 0x04, 0x5c, 0x28, 0x1c,
  0x8e, 0x09, 0xb8, 0x50, 0x38, 0x1c, 0x13, 0x70, 0xa1, 0x70, 0x38, 0x26,
  0xe0, 0x42, 0xe1, 0x70, 0x4c, 0xc0, 0x85, 0xc2, 0xe1, 0x98, 0x80, 0x0b,
  0x85, 0xc3, 0x31, 0x01, 0x17, 0x0a, 0x87, 0x63, 0x02, 0x2e, 0x14, 0x0e,
  0xc7, 0x04, 0x5c, 0x28, 0x1c, 0x8e, 0x09, 0xb8, 0x50, 0x38, 0x1c, 0x13,
  0x70, 0xa1, 0x70, 0x38, 0x26, 0xe0, 0x42, 0xe1, 0x70, 0x4c, 0xc0, 0x85,
  0xc2, 0xe1, 0x98, 0x80, 0x0b, 0x85, 0xc3, 0x31, 0x01, 0x17, 0x0a, 0x87,
  0x63, 0x02, 0x2e, 0x14, 0x0e, 0xc7, 0x04, 0x5c, 0x28, 0x1c, 0x8e, 0x09,
  0xb8, 0x50, 0x38, 0x1c, 0x13, 0xfc, 0x3f, 0x3a, 0xbc, 0x34, 0xd7, 0x95,
  0xfa, 0x4f, 0x86, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
  0x42, 0x60, 0x82
};
