#!/usr/bin/env python3.2

import utils
import plasma
import time

from pythia.constants import ADMIN_TOKEN

with utils.Servers(apertus = False) as (meta, tropho, apertus):

    def client(i):
        meta_client = plasma.Meta(meta.meta_host, int(meta.meta_port))
        email = 'user%s@infinit.io' % i
        password = '#' * 64
        res = meta_client.register(email, 'User %s' % i, password, 'bitebite')
        assert res.success
        login = meta_client.login(email, password)
        assert login.success
        device = meta_client.create_device("device").id
        tropho_client = plasma.Trophonius(tropho.host, tropho.port,
                                lambda: None)
        tropho_client.connect(meta_client.self().id, meta_client.token, device)
        return meta_client, tropho_client

    clients = list(client(i) for i in range(2))

    # XXX: this notification suicides the whole process. Test it when
    # it's instrumented better.
    # admin = plasma.Meta(meta.meta_host, int(meta.meta_port))
    # admin.token = ADMIN_TOKEN
    # admin.genocide()
    # while True:
    #     for meta, tropho in clients:
    #         tropho.poll()
    #     time.sleep(1)
