#!/usr/bin/env python3.2

import json
import pythia
import sys
import time

import trophonius
import plasma

try:
    meta = trophonius.FakeMeta()
    with meta:
        tropho = trophonius.Trophonius(meta_port = meta.port)
        with tropho:
            meta_client = pythia.Client(server = meta.url)
            res = meta_client.post('/user/login', {
                'email': 'pif@infinit.io',
                'password': 'paf'
                })
            client = plasma.Trophonius(tropho.host, tropho.port,
                                       lambda: print('connected'))
            client.connect(res['_id'], res['token'], 'device')
            for i in range(30):
                notif = client.poll()
                if notif is not None:
                    print(notif)
                time.sleep(2)
            assert client.retries == 0
            print("quiting")
except:
    print('Trophonius stdout:\n' + tropho.stdout, file = sys.stderr)
    print('Trophonius stderr:\n' + tropho.stderr, file = sys.stderr)
    print('Meta stdout:\n' + meta.stdout, file = sys.stderr)
    print('Meta stderr:\n' + meta.stderr, file = sys.stderr)
    raise

try:
    meta = trophonius.FakeMeta()
    with meta:
        tropho = trophonius.Trophonius(meta_port = meta.port,
                                       timeout = 3)
        with tropho:
            meta_client = pythia.Client(server = meta.url)
            res = meta_client.post('/user/login', {
                'email': 'pif@infinit.io',
                'password': 'paf'
                })
            client = plasma.Trophonius(tropho.host, tropho.port,
                                       lambda: print('connected'))
            client.connect(res['_id'], res['token'], 'device')
            for i in range(15):
                notif = client.poll()
                if notif is not None:
                    print(notif)
                time.sleep(1)
            if client.retries != 4:
                raise Exception('client should have reconnected 3 '
                                'times, not %s' % client.retries)
            print("quiting")
except:
    print('Trophonius stdout:\n' + tropho.stdout, file = sys.stderr)
    print('Trophonius stderr:\n' + tropho.stderr, file = sys.stderr)
    print('Meta stdout:\n' + meta.stdout, file = sys.stderr)
    print('Meta stderr:\n' + meta.stderr, file = sys.stderr)
    raise
