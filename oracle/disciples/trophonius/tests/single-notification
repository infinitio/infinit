#!/usr/bin/env python3.2
# -*- coding: utf-8 -*-

import hashlib
import plasma
import sys
import trophonius
import utils

from time import sleep

def __hash_password(password):
    return hashlib.sha256(password.encode()).hexdigest()

with utils.Servers() as (meta, tropho, apertus):

    def login(meta_client, email, password):
        login = meta_client.login(email, password)
        assert login.success

    def register_and_login(user_name):
        meta_client = plasma.Meta('127.0.0.1', int(port))
        email = user_name.replace(' ', '').lower() + '@infinit.io'
        password = __hash_password(user_name + 'password')
        res = meta_client.register(email, user_name, password, 'bitebite')
        assert res.success
        login(meta_client, email, password)
        return meta_client

    def poll(client):
        notifications = []
        notif = client.poll()
        while notif is not None:
            notifications.append(notif)
            notif = client.poll()
        return notifications

    proto, addr, port = meta.url.split(':')
    addr = addr.replace('/', '')
    port = port.replace(':', '')

    meta_client = register_and_login('Some User')
    device = meta_client.create_device('device')
    tropho_client = plasma.Trophonius(tropho.host, tropho.port, lambda: None)
    tropho_client.connect(meta_client.self().id,
                          meta_client.token,
                          device.id)

    tropho_admin = trophonius.Admin(tropho)
    tropho_admin.notify(to = device.id, msg = {
                        "notification_type": 9,
                        "user_id": "51dc088bd721fb567bc3e6d3",
                        "timestamp": 1373374603.761489
    })

    got_notification = False
    for i in range(3):
        notifications = poll(tropho_client)
        for n in notifications:
            if n.type == 'new_swagger':
                got_notification = True
        sleep(1)

    assert got_notification
