#!/usr/bin/env python2.7
from __future__ import print_function


"""Meta server provide a JSON-RPC API to infinit
users, networks and devices managment.

"""

import os
import sys
import argparse

sys.path.insert(0, os.path.join(os.path.dirname(__file__), "../lib/python"))
sys.path.insert(0, os.path.join(os.path.dirname(__file__), "../lib/python/meta/mongobox"))

import meta.conf
import mongobox

parser = argparse.ArgumentParser(description="Meta server")

parser.add_argument(
    '--meta-host',
    default = meta.conf.META_HOST,
)
parser.add_argument(
    '--meta-port',
    type = int,
    default = meta.conf.META_PORT,
)

parser.add_argument(
    '--mongo-host',
    default = meta.conf.MONGO_HOST,
)

parser.add_argument(
    '--mongo-port',
    type = int,
    default = meta.conf.MONGO_PORT,
)

parser.add_argument(
    '--trophonius-control-port',
    type = int,
    default = meta.conf.TROPHONIUS_CONTROL_PORT,
)

parser.add_argument(
    '--apertus-host',
    type = str,
    default = meta.conf.APERTUS_HOST
)

parser.add_argument(
    '--apertus-port',
    type = int,
    default = meta.conf.APERTUS_PORT
)
# if testing, need to spawn DB to path that can be accessed
parser.add_argument(
    '--spawn-db',
    help = 'Enabling this will ignore your MongoDB parameters.',
    action = 'store_true',
    default = False,
)

parser.add_argument(
    '--port-file',
    default = 'meta_port_file',
)

from meta.application import Application

if __name__ == '__main__':
    args = parser.parse_args()
    try:
        if args.spawn_db == True:
            with mongobox.MongoBox() as mongo:
                app = Application(meta_host=args.meta_host,
                                  meta_port=args.meta_port,
                                  mongo_host="localhost",
                                  mongo_port=mongo.port,
                                  apertus_host=args.apertus_host,
                                  apertus_port=args.apertus_port,
                                  tropho_control_port=args.trophonius_control_port,
                                  port_file=args.port_file,
                )
                app.run()
        else:
            app = Application(meta_host=args.meta_host,
                              meta_port=args.meta_port,
                              mongo_host=args.mongo_host,
                              mongo_port=args.mongo_port,
                              apertus_host=args.apertus_host,
                              apertus_port=args.apertus_port,
                              tropho_control_port=args.trophonius_control_port,
                              port_file=args.port_file,
            )
            app.run()
    except KeyboardInterrupt:
        print("Interrupted cleanly")
